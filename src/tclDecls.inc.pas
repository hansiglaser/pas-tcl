(*
 * tclDecls.h --
 *
 *	Declarations of functions in the platform independent public Tcl API.
 *
 * Copyright (c) 1998-1999 by Scriptics Corporation.
 *
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @(#) $Id: tclDecls.h,v 1.130.2.2 2010/02/07 22:16:54 nijtmans Exp $
 *)

(*
 * WARNING: This file is automatically generated by the tools/genStubs.tcl
 * script.  Any modifications to the function declarations below should be made
 * in the generic/tcl.decls script.
 *)

(* !BEGIN!: Do not edit below this line. *)

(*
 * Exported function declarations:
 *)

function Tcl_PkgProvideEx(interp:PTcl_Interp; name:PChar; version:PChar; clientData:ClientData):cint;cdecl;external;
function Tcl_PkgRequireEx(interp:PTcl_Interp; name:PChar; version:PChar; exact:cint; clientDataPtr:PClientData):PChar;cdecl;external;
procedure Tcl_Panic(format:PChar; args:array of const);cdecl;external;
procedure Tcl_Panic(format:PChar);cdecl;external;
function Tcl_Alloc(size:cuint):PChar;cdecl;external;
procedure Tcl_Free(ptr:PChar);cdecl;external;
function Tcl_Realloc(ptr:PChar; size:cuint):PChar;cdecl;external;
function Tcl_DbCkalloc(size:cuint; _file:PChar; line:cint):PChar;cdecl;external;
function Tcl_DbCkfree(ptr:PChar; _file:PChar; line:cint):cint;cdecl;external;
function Tcl_DbCkrealloc(ptr:PChar; size:cuint; _file:PChar; line:cint):PChar;cdecl;external;
procedure Tcl_CreateFileHandler(fd:cint; mask:cint; proc:Tcl_FileProc; clientData:ClientData);cdecl;external;
procedure Tcl_DeleteFileHandler(fd:cint);cdecl;external;
procedure Tcl_SetTimer(timePtr:PTcl_Time);cdecl;external;
procedure Tcl_Sleep(ms:cint);cdecl;external;
function Tcl_WaitForEvent(timePtr:PTcl_Time):cint;cdecl;external;
function Tcl_AppendAllObjTypes(interp:PTcl_Interp; objPtr:PTcl_Obj):cint;cdecl;external;
procedure Tcl_AppendStringsToObj(objPtr:PTcl_Obj; args:array of const);cdecl;external;
procedure Tcl_AppendStringsToObj(objPtr:PTcl_Obj);cdecl;external;
procedure Tcl_AppendToObj(objPtr:PTcl_Obj; bytes:PChar; length:cint);cdecl;external;
function Tcl_ConcatObj(objc:cint; objv:array of PTcl_Obj):PTcl_Obj;cdecl;external;
function Tcl_ConvertToType(interp:PTcl_Interp; objPtr:PTcl_Obj; typePtr:PTcl_ObjType):cint;cdecl;external;
procedure Tcl_DbDecrRefCount(objPtr:PTcl_Obj; _file:PChar; line:cint);cdecl;external;
procedure Tcl_DbIncrRefCount(objPtr:PTcl_Obj; _file:PChar; line:cint);cdecl;external;
function Tcl_DbIsShared(objPtr:PTcl_Obj; _file:PChar; line:cint):cint;cdecl;external;
function Tcl_DbNewBooleanObj(boolValue:cint; _file:PChar; line:cint):PTcl_Obj;cdecl;external;
function Tcl_DbNewByteArrayObj(bytes:pcuchar; length:cint; _file:PChar; line:cint):PTcl_Obj;cdecl;external;
function Tcl_DbNewDoubleObj(doubleValue:double; _file:PChar; line:cint):PTcl_Obj;cdecl;external;
function Tcl_DbNewListObj(objc:cint; objv:PPTcl_Obj; _file:PChar; line:cint):PTcl_Obj;cdecl;external;
function Tcl_DbNewLongObj(longValue:clong; _file:PChar; line:cint):PTcl_Obj;cdecl;external;
function Tcl_DbNewObj(_file:PChar; line:cint):PTcl_Obj;cdecl;external;
function Tcl_DbNewStringObj(bytes:PChar; length:cint; _file:PChar; line:cint):PTcl_Obj;cdecl;external;
function Tcl_DuplicateObj(objPtr:PTcl_Obj):PTcl_Obj;cdecl;external;
procedure TclFreeObj(objPtr:PTcl_Obj);cdecl;external;
function Tcl_GetBoolean(interp:PTcl_Interp; src:PChar; boolPtr:pcint):cint;cdecl;external;
function Tcl_GetBooleanFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; boolPtr:pcint):cint;cdecl;external;
function Tcl_GetByteArrayFromObj(objPtr:PTcl_Obj; lengthPtr:pcint):pcuchar;cdecl;external;
function Tcl_GetDouble(interp:PTcl_Interp; src:PChar; doublePtr:Pdouble):cint;cdecl;external;
function Tcl_GetDoubleFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; doublePtr:Pdouble):cint;cdecl;external;
function Tcl_GetIndexFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; tablePtr:PPChar; msg:PChar; flags:cint;
           indexPtr:pcint):cint;cdecl;external;
function Tcl_GetInt(interp:PTcl_Interp; src:PChar; intPtr:pcint):cint;cdecl;external;
function Tcl_GetIntFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; Out intPtr:LongInt):cint;cdecl;external;
function Tcl_GetLongFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; longPtr:pclong):cint;cdecl;external;
function Tcl_GetObjType(typeName:PChar):PTcl_ObjType;cdecl;external;
function Tcl_GetStringFromObj(objPtr:PTcl_Obj; lengthPtr:pcint):PChar;cdecl;external;
procedure Tcl_InvalidateStringRep(objPtr:PTcl_Obj);cdecl;external;
function Tcl_ListObjAppendList(interp:PTcl_Interp; listPtr:PTcl_Obj; elemListPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_ListObjAppendElement(interp:PTcl_Interp; listPtr:PTcl_Obj; objPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_ListObjGetElements(interp:PTcl_Interp; listPtr:PTcl_Obj; Out objc:cint; Out objv:PPTcl_Obj):cint;cdecl;external;
function Tcl_ListObjIndex(interp:PTcl_Interp; listPtr:PTcl_Obj; index:cint; Out objPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_ListObjLength(interp:PTcl_Interp; listPtr:PTcl_Obj; Out lengthPtr:CInt):cint;cdecl;external;
function Tcl_ListObjReplace(interp:PTcl_Interp; listPtr:PTcl_Obj; first:cint; count:cint; objc:cint; 
           objv:PPTcl_Obj):cint;cdecl;external;
function Tcl_NewBooleanObj(boolValue:cint):PTcl_Obj;cdecl;external;
function Tcl_NewByteArrayObj(bytes:pcuchar; length:cint):PTcl_Obj;cdecl;external;
function Tcl_NewDoubleObj(doubleValue:double):PTcl_Obj;cdecl;external;
function Tcl_NewIntObj(intValue:cint):PTcl_Obj;cdecl;external;
function Tcl_NewListObj(objc:cint; objv:PPTcl_Obj):PTcl_Obj;cdecl;external;
function Tcl_NewLongObj(longValue:clong):PTcl_Obj;cdecl;external;
function Tcl_NewObj:PTcl_Obj;cdecl;external;
function Tcl_NewStringObj(bytes:PChar; length:cint):PTcl_Obj;cdecl;external;
procedure Tcl_SetBooleanObj(objPtr:PTcl_Obj; boolValue:cint);cdecl;external;
function Tcl_SetByteArrayLength(objPtr:PTcl_Obj; length:cint):pcuchar;cdecl;external;
procedure Tcl_SetByteArrayObj(objPtr:PTcl_Obj; bytes:pcuchar; length:cint);cdecl;external;
procedure Tcl_SetDoubleObj(objPtr:PTcl_Obj; doubleValue:double);cdecl;external;
procedure Tcl_SetIntObj(objPtr:PTcl_Obj; intValue:cint);cdecl;external;
procedure Tcl_SetListObj(objPtr:PTcl_Obj; objc:cint; objv:PPTcl_Obj);cdecl;external;
procedure Tcl_SetLongObj(objPtr:PTcl_Obj; longValue:clong);cdecl;external;
procedure Tcl_SetObjLength(objPtr:PTcl_Obj; length:cint);cdecl;external;
procedure Tcl_SetStringObj(objPtr:PTcl_Obj; bytes:PChar; length:cint);cdecl;external;
procedure Tcl_AddErrorInfo(interp:PTcl_Interp; message:PChar);cdecl;external;
procedure Tcl_AddObjErrorInfo(interp:PTcl_Interp; message:PChar; length:cint);cdecl;external;
procedure Tcl_AllowExceptions(interp:PTcl_Interp);cdecl;external;
procedure Tcl_AppendElement(interp:PTcl_Interp; element:PChar);cdecl;external;
procedure Tcl_AppendResult(interp:PTcl_Interp; args:array of const);cdecl;external;
function Tcl_AsyncCreate(proc:Tcl_AsyncProc; clientData:ClientData):PTcl_AsyncHandler;cdecl;external;
procedure Tcl_AsyncDelete(async:PTcl_AsyncHandler);cdecl;external;
function Tcl_AsyncInvoke(interp:PTcl_Interp; code:cint):cint;cdecl;external;
procedure Tcl_AsyncMark(async:PTcl_AsyncHandler);cdecl;external;
function Tcl_AsyncReady:cint;cdecl;external;
procedure Tcl_BackgroundError(interp:PTcl_Interp);cdecl;external;
function Tcl_Backslash(src:PChar; readPtr:pcint):cchar;cdecl;external;
function Tcl_BadChannelOption(interp:PTcl_Interp; optionName:PChar; optionList:PChar):cint;cdecl;external;
procedure Tcl_CallWhenDeleted(interp:PTcl_Interp; proc:Tcl_InterpDeleteProc; clientData:ClientData);cdecl;external;
procedure Tcl_CancelIdleCall(idleProc:Tcl_IdleProc; clientData:ClientData);cdecl;external;
function Tcl_Close(interp:PTcl_Interp; chan:PTcl_Channel):cint;cdecl;external;
function Tcl_CommandComplete(cmd:PChar):cint;cdecl;external;
function Tcl_Concat(argc:cint; argv:PPChar):PChar;cdecl;external;
function Tcl_ConvertElement(src:PChar; dst:PChar; flags:cint):cint;cdecl;external;
function Tcl_ConvertCountedElement(src:PChar; length:cint; dst:PChar; flags:cint):cint;cdecl;external;
function Tcl_CreateAlias(slave:PTcl_Interp; slaveCmd:PChar; target:PTcl_Interp; targetCmd:PChar; argc:cint;
           argv:PPChar):cint;cdecl;external;
function Tcl_CreateAliasObj(slave:PTcl_Interp; slaveCmd:PChar; target:PTcl_Interp; targetCmd:PChar; objc:cint;
           objv:array of PTcl_Obj):cint;cdecl;external;
function Tcl_CreateChannel(typePtr:PTcl_ChannelType; chanName:PChar; instanceData:ClientData; mask:cint):PTcl_Channel;cdecl;external;
procedure Tcl_CreateChannelHandler(chan:PTcl_Channel; mask:cint; proc:Tcl_ChannelProc; clientData:ClientData);cdecl;external;
procedure Tcl_CreateCloseHandler(chan:PTcl_Channel; proc:Tcl_CloseProc; clientData:ClientData);cdecl;external;
function Tcl_CreateCommand(interp:PTcl_Interp; cmdName:PChar; proc:Tcl_CmdProc; clientData:ClientData; deleteProc:Tcl_CmdDeleteProc):PTcl_Command;cdecl;external;
procedure Tcl_CreateEventSource(setupProc:Tcl_EventSetupProc; checkProc:Tcl_EventCheckProc; clientData:ClientData);cdecl;external;
procedure Tcl_CreateExitHandler(proc:Tcl_ExitProc; clientData:ClientData);cdecl;external;
function Tcl_CreateInterp:PTcl_Interp;cdecl;external;
procedure Tcl_CreateMathFunc(interp:PTcl_Interp; name:PChar; numArgs:cint; argTypes:PTcl_ValueType; proc:Tcl_MathProc;
            clientData:ClientData);cdecl;external;
function Tcl_CreateObjCommand(interp:PTcl_Interp; cmdName:PChar; proc:Tcl_ObjCmdProc; clientData:ClientData; deleteProc:Tcl_CmdDeleteProc):PTcl_Command;cdecl;external;
function Tcl_CreateSlave(interp:PTcl_Interp; slaveName:PChar; isSafe:cint):PTcl_Interp;cdecl;external;
function Tcl_CreateTimerHandler(milliseconds:cint; proc:Tcl_TimerProc; clientData:ClientData):PTcl_TimerToken;cdecl;external;
function Tcl_CreateTrace(interp:PTcl_Interp; level:cint; proc:Tcl_CmdTraceProc; clientData:ClientData):PTcl_Trace;cdecl;external;
procedure Tcl_DeleteAssocData(interp:PTcl_Interp; name:PChar);cdecl;external;
procedure Tcl_DeleteChannelHandler(chan:PTcl_Channel; proc:Tcl_ChannelProc; clientData:ClientData);cdecl;external;
procedure Tcl_DeleteCloseHandler(chan:PTcl_Channel; proc:Tcl_CloseProc; clientData:ClientData);cdecl;external;
function Tcl_DeleteCommand(interp:PTcl_Interp; cmdName:PChar):cint;cdecl;external;
function Tcl_DeleteCommandFromToken(interp:PTcl_Interp; command:PTcl_Command):cint;cdecl;external;
procedure Tcl_DeleteEvents(proc:Tcl_EventDeleteProc; clientData:ClientData);cdecl;external;
procedure Tcl_DeleteEventSource(setupProc:Tcl_EventSetupProc; checkProc:Tcl_EventCheckProc; clientData:ClientData);cdecl;external;
procedure Tcl_DeleteExitHandler(proc:Tcl_ExitProc; clientData:ClientData);cdecl;external;
procedure Tcl_DeleteHashEntry(entryPtr:PTcl_HashEntry);cdecl;external;
procedure Tcl_DeleteHashTable(tablePtr:PTcl_HashTable);cdecl;external;
procedure Tcl_DeleteInterp(interp:PTcl_Interp);cdecl;external;
procedure Tcl_DetachPids(numPids:cint; pidPtr:PTcl_Pid);cdecl;external;
procedure Tcl_DeleteTimerHandler(token:PTcl_TimerToken);cdecl;external;
procedure Tcl_DeleteTrace(interp:PTcl_Interp; trace:PTcl_Trace);cdecl;external;
procedure Tcl_DontCallWhenDeleted(interp:PTcl_Interp; proc:Tcl_InterpDeleteProc; clientData:ClientData);cdecl;external;
function Tcl_DoOneEvent(flags:cint):cint;cdecl;external;
procedure Tcl_DoWhenIdle(proc:Tcl_IdleProc; clientData:ClientData);cdecl;external;
function Tcl_DStringAppend(dsPtr:PTcl_DString; bytes:PChar; length:cint):PChar;cdecl;external;
function Tcl_DStringAppendElement(dsPtr:PTcl_DString; element:PChar):PChar;cdecl;external;
procedure Tcl_DStringEndSublist(dsPtr:PTcl_DString);cdecl;external;
procedure Tcl_DStringFree(dsPtr:PTcl_DString);cdecl;external;
procedure Tcl_DStringGetResult(interp:PTcl_Interp; dsPtr:PTcl_DString);cdecl;external;
procedure Tcl_DStringInit(dsPtr:PTcl_DString);cdecl;external;
procedure Tcl_DStringResult(interp:PTcl_Interp; dsPtr:PTcl_DString);cdecl;external;
procedure Tcl_DStringSetLength(dsPtr:PTcl_DString; length:cint);cdecl;external;
procedure Tcl_DStringStartSublist(dsPtr:PTcl_DString);cdecl;external;
function Tcl_Eof(chan:PTcl_Channel):cint;cdecl;external;
function Tcl_ErrnoId:PChar;cdecl;external;
function Tcl_ErrnoMsg(err:cint):PChar;cdecl;external;
function Tcl_Eval(interp:PTcl_Interp; script:PChar):cint;cdecl;external;
function Tcl_EvalFile(interp:PTcl_Interp; fileName:PChar):cint;cdecl;external;
function Tcl_EvalObj(interp:PTcl_Interp; objPtr:PTcl_Obj):cint;cdecl;external;
procedure Tcl_EventuallyFree(clientData:ClientData; freeProc:Tcl_FreeProc);cdecl;external;
procedure Tcl_Exit(status:cint);cdecl;external;
function Tcl_ExposeCommand(interp:PTcl_Interp; hiddenCmdToken:PChar; cmdName:PChar):cint;cdecl;external;
function Tcl_ExprBoolean(interp:PTcl_Interp; expr:PChar; ptr:pcint):cint;cdecl;external;
function Tcl_ExprBooleanObj(interp:PTcl_Interp; objPtr:PTcl_Obj; ptr:pcint):cint;cdecl;external;
function Tcl_ExprDouble(interp:PTcl_Interp; expr:PChar; ptr:Pdouble):cint;cdecl;external;
function Tcl_ExprDoubleObj(interp:PTcl_Interp; objPtr:PTcl_Obj; ptr:Pdouble):cint;cdecl;external;
function Tcl_ExprLong(interp:PTcl_Interp; expr:PChar; ptr:pclong):cint;cdecl;external;
function Tcl_ExprLongObj(interp:PTcl_Interp; objPtr:PTcl_Obj; ptr:pclong):cint;cdecl;external;
function Tcl_ExprObj(interp:PTcl_Interp; objPtr:PTcl_Obj; resultPtrPtr:PPTcl_Obj):cint;cdecl;external;
function Tcl_ExprString(interp:PTcl_Interp; expr:PChar):cint;cdecl;external;
procedure Tcl_Finalize;cdecl;external;
procedure Tcl_FindExecutable(argv0:PChar);cdecl;external;
function Tcl_FirstHashEntry(tablePtr:PTcl_HashTable; searchPtr:PTcl_HashSearch):PTcl_HashEntry;cdecl;external;
function Tcl_Flush(chan:PTcl_Channel):cint;cdecl;external;
procedure Tcl_FreeResult(interp:PTcl_Interp);cdecl;external;
function Tcl_GetAlias(interp:PTcl_Interp; slaveCmd:PChar; targetInterpPtr:PPTcl_Interp; targetCmdPtr:PPChar; argcPtr:pcint;
           argvPtr:PPPChar):cint;cdecl;external;
function Tcl_GetAliasObj(interp:PTcl_Interp; slaveCmd:PChar; targetInterpPtr:PPTcl_Interp; targetCmdPtr:PPChar; objcPtr:pcint;
           objv:PPPTcl_Obj):cint;cdecl;external;
function Tcl_GetAssocData(interp:PTcl_Interp; name:PChar; procPtr:Tcl_InterpDeleteProc):ClientData;cdecl;external;
function Tcl_GetChannel(interp:PTcl_Interp; chanName:PChar; modePtr:pcint):PTcl_Channel;cdecl;external;
function Tcl_GetChannelBufferSize(chan:PTcl_Channel):cint;cdecl;external;
function Tcl_GetChannelHandle(chan:PTcl_Channel; direction:cint; handlePtr:PClientData):cint;cdecl;external;
function Tcl_GetChannelInstanceData(chan:PTcl_Channel):ClientData;cdecl;external;
function Tcl_GetChannelMode(chan:PTcl_Channel):cint;cdecl;external;
function Tcl_GetChannelName(chan:PTcl_Channel):PChar;cdecl;external;
function Tcl_GetChannelOption(interp:PTcl_Interp; chan:PTcl_Channel; optionName:PChar; dsPtr:PTcl_DString):cint;cdecl;external;
function Tcl_GetChannelType(chan:PTcl_Channel):PTcl_ChannelType;cdecl;external;
function Tcl_GetCommandInfo(interp:PTcl_Interp; cmdName:PChar; infoPtr:PTcl_CmdInfo):cint;cdecl;external;
function Tcl_GetCommandName(interp:PTcl_Interp; command:PTcl_Command):PChar;cdecl;external;
function Tcl_GetErrno:cint;cdecl;external;
function Tcl_GetHostName:PChar;cdecl;external;
function Tcl_GetInterpPath(askInterp:PTcl_Interp; slaveInterp:PTcl_Interp):cint;cdecl;external;
function Tcl_GetMaster(interp:PTcl_Interp):PTcl_Interp;cdecl;external;
function Tcl_GetNameOfExecutable:PChar;cdecl;external;
function Tcl_GetObjResult(interp:PTcl_Interp):PTcl_Obj;cdecl;external;
function Tcl_GetOpenFile(interp:PTcl_Interp; chanID:PChar; forWriting:cint; checkUsage:cint; filePtr:PClientData):cint;cdecl;external;
function Tcl_GetPathType(path:PChar):Tcl_PathType;cdecl;external;
function Tcl_Gets(chan:PTcl_Channel; dsPtr:PTcl_DString):cint;cdecl;external;
function Tcl_GetsObj(chan:PTcl_Channel; objPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_GetServiceMode:cint;cdecl;external;
function Tcl_GetSlave(interp:PTcl_Interp; slaveName:PChar):PTcl_Interp;cdecl;external;
function Tcl_GetStdChannel(_type:cint):PTcl_Channel;cdecl;external;
function Tcl_GetStringResult(interp:PTcl_Interp):PChar;cdecl;external;
function Tcl_GetVar(interp:PTcl_Interp; varName:PChar; flags:cint):PChar;cdecl;external;
function Tcl_GetVar2(interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint):PChar;cdecl;external;
function Tcl_GlobalEval(interp:PTcl_Interp; command:PChar):cint;cdecl;external;
function Tcl_GlobalEvalObj(interp:PTcl_Interp; objPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_HideCommand(interp:PTcl_Interp; cmdName:PChar; hiddenCmdToken:PChar):cint;cdecl;external;
function Tcl_Init(interp:PTcl_Interp):cint;cdecl;external;
procedure Tcl_InitHashTable(tablePtr:PTcl_HashTable; keyType:cint);cdecl;external;
function Tcl_InputBlocked(chan:PTcl_Channel):cint;cdecl;external;
function Tcl_InputBuffered(chan:PTcl_Channel):cint;cdecl;external;
function Tcl_InterpDeleted(interp:PTcl_Interp):cint;cdecl;external;
function Tcl_IsSafe(interp:PTcl_Interp):cint;cdecl;external;
function Tcl_JoinPath(argc:cint; argv:PPChar; resultPtr:PTcl_DString):PChar;cdecl;external;
function Tcl_LinkVar(interp:PTcl_Interp; varName:PChar; addr:PChar; _type:cint):cint;cdecl;external;
function Tcl_MakeFileChannel(handle:ClientData; mode:cint):PTcl_Channel;cdecl;external;
function Tcl_MakeSafe(interp:PTcl_Interp):cint;cdecl;external;
function Tcl_MakeTcpClientChannel(tcpSocket:ClientData):PTcl_Channel;cdecl;external;
function Tcl_Merge(argc:cint; argv:PPChar):PChar;cdecl;external;
function Tcl_NextHashEntry(searchPtr:PTcl_HashSearch):PTcl_HashEntry;cdecl;external;
procedure Tcl_NotifyChannel(channel:PTcl_Channel; mask:cint);cdecl;external;
function Tcl_ObjGetVar2(interp:PTcl_Interp; part1Ptr:PTcl_Obj; part2Ptr:PTcl_Obj; flags:cint):PTcl_Obj;cdecl;external;
function Tcl_ObjSetVar2(interp:PTcl_Interp; part1Ptr:PTcl_Obj; part2Ptr:PTcl_Obj; newValuePtr:PTcl_Obj; flags:cint):PTcl_Obj;cdecl;external;
function Tcl_OpenCommandChannel(interp:PTcl_Interp; argc:cint; argv:PPChar; flags:cint):PTcl_Channel;cdecl;external;
function Tcl_OpenFileChannel(interp:PTcl_Interp; fileName:PChar; modeString:PChar; permissions:cint):PTcl_Channel;cdecl;external;
function Tcl_OpenTcpClient(interp:PTcl_Interp; port:cint; address:PChar; myaddr:PChar; myport:cint;
           async:cint):PTcl_Channel;cdecl;external;
function Tcl_OpenTcpServer(interp:PTcl_Interp; port:cint; host:PChar; acceptProc:Tcl_TcpAcceptProc; callbackData:ClientData):PTcl_Channel;cdecl;external;
procedure Tcl_Preserve(data:ClientData);cdecl;external;
procedure Tcl_PrintDouble(interp:PTcl_Interp; value:double; dst:PChar);cdecl;external;
function Tcl_PutEnv(assignment:PChar):cint;cdecl;external;
function Tcl_PosixError(interp:PTcl_Interp):PChar;cdecl;external;
procedure Tcl_QueueEvent(evPtr:PTcl_Event; position:Tcl_QueuePosition);cdecl;external;
function Tcl_Read(chan:PTcl_Channel; bufPtr:PChar; toRead:cint):cint;cdecl;external;
procedure Tcl_ReapDetachedProcs;cdecl;external;
function Tcl_RecordAndEval(interp:PTcl_Interp; cmd:PChar; flags:cint):cint;cdecl;external;
function Tcl_RecordAndEvalObj(interp:PTcl_Interp; cmdPtr:PTcl_Obj; flags:cint):cint;cdecl;external;
procedure Tcl_RegisterChannel(interp:PTcl_Interp; chan:PTcl_Channel);cdecl;external;
procedure Tcl_RegisterObjType(typePtr:PTcl_ObjType);cdecl;external;
function Tcl_RegExpCompile(interp:PTcl_Interp; pattern:PChar):PTcl_RegExp;cdecl;external;
function Tcl_RegExpExec(interp:PTcl_Interp; regexp:PTcl_RegExp; text:PChar; start:PChar):cint;cdecl;external;
function Tcl_RegExpMatch(interp:PTcl_Interp; text:PChar; pattern:PChar):cint;cdecl;external;
procedure Tcl_RegExpRange(regexp:PTcl_RegExp; index:cint; startPtr:PPChar; endPtr:PPChar);cdecl;external;
procedure Tcl_Release(clientData:ClientData);cdecl;external;
procedure Tcl_ResetResult(interp:PTcl_Interp);cdecl;external;
function Tcl_ScanElement(str:PChar; flagPtr:pcint):cint;cdecl;external;
function Tcl_ScanCountedElement(str:PChar; length:cint; flagPtr:pcint):cint;cdecl;external;
function Tcl_SeekOld(chan:PTcl_Channel; offset:cint; mode:cint):cint;cdecl;external;
function Tcl_ServiceAll:cint;cdecl;external;
function Tcl_ServiceEvent(flags:cint):cint;cdecl;external;
procedure Tcl_SetAssocData(interp:PTcl_Interp; name:PChar; proc:Tcl_InterpDeleteProc; clientData:ClientData);cdecl;external;
procedure Tcl_SetChannelBufferSize(chan:PTcl_Channel; sz:cint);cdecl;external;
function Tcl_SetChannelOption(interp:PTcl_Interp; chan:PTcl_Channel; optionName:PChar; newValue:PChar):cint;cdecl;external;
function Tcl_SetCommandInfo(interp:PTcl_Interp; cmdName:PChar; infoPtr:PTcl_CmdInfo):cint;cdecl;external;
procedure Tcl_SetErrno(err:cint);cdecl;external;
procedure Tcl_SetErrorCode(interp:PTcl_Interp; args:array of const);cdecl;external;
procedure Tcl_SetErrorCode(interp:PTcl_Interp);cdecl;external;
procedure Tcl_SetMaxBlockTime(timePtr:PTcl_Time);cdecl;external;
procedure Tcl_SetPanicProc(panicProc:Tcl_PanicProc);cdecl;external;
function Tcl_SetRecursionLimit(interp:PTcl_Interp; depth:cint):cint;cdecl;external;
procedure Tcl_SetResult(interp:PTcl_Interp; result:PChar; freeProc:Tcl_FreeProc);cdecl;external;
function Tcl_SetServiceMode(mode:cint):cint;cdecl;external;
procedure Tcl_SetObjErrorCode(interp:PTcl_Interp; errorObjPtr:PTcl_Obj);cdecl;external;
procedure Tcl_SetObjResult(interp:PTcl_Interp; resultObjPtr:PTcl_Obj);cdecl;external;
procedure Tcl_SetStdChannel(channel:PTcl_Channel; _type:cint);cdecl;external;
function Tcl_SetVar(interp:PTcl_Interp; varName:PChar; newValue:PChar; flags:cint):PChar;cdecl;external;
function Tcl_SetVar2(interp:PTcl_Interp; part1:PChar; part2:PChar; newValue:PChar; flags:cint):PChar;cdecl;external;
function Tcl_SignalId(sig:cint):PChar;cdecl;external;
function Tcl_SignalMsg(sig:cint):PChar;cdecl;external;
procedure Tcl_SourceRCFile(interp:PTcl_Interp);cdecl;external;
function Tcl_SplitList(interp:PTcl_Interp; listStr:PChar; argcPtr:pcint; argvPtr:PPPChar):cint;cdecl;external;
procedure Tcl_SplitPath(path:PChar; argcPtr:pcint; argvPtr:PPPChar);cdecl;external;
procedure Tcl_StaticPackage(interp:PTcl_Interp; pkgName:PChar; initProc:Tcl_PackageInitProc; safeInitProc:Tcl_PackageInitProc);cdecl;external;
function Tcl_StringMatch(str:PChar; pattern:PChar):cint;cdecl;external;
function Tcl_TellOld(chan:PTcl_Channel):cint;cdecl;external;
function Tcl_TraceVar(interp:PTcl_Interp; varName:PChar; flags:cint; proc:Tcl_VarTraceProc; clientData:ClientData):cint;cdecl;external;
function Tcl_TraceVar2(interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint; proc:Tcl_VarTraceProc;
           clientData:ClientData):cint;cdecl;external;
function Tcl_TranslateFileName(interp:PTcl_Interp; name:PChar; bufferPtr:PTcl_DString):PChar;cdecl;external;
function Tcl_Ungets(chan:PTcl_Channel; str:PChar; len:cint; atHead:cint):cint;cdecl;external;
procedure Tcl_UnlinkVar(interp:PTcl_Interp; varName:PChar);cdecl;external;
function Tcl_UnregisterChannel(interp:PTcl_Interp; chan:PTcl_Channel):cint;cdecl;external;
function Tcl_UnsetVar(interp:PTcl_Interp; varName:PChar; flags:cint):cint;cdecl;external;
function Tcl_UnsetVar2(interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint):cint;cdecl;external;
procedure Tcl_UntraceVar(interp:PTcl_Interp; varName:PChar; flags:cint; proc:Tcl_VarTraceProc; clientData:ClientData);cdecl;external;
procedure Tcl_UntraceVar2(interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint; proc:Tcl_VarTraceProc;
            clientData:ClientData);cdecl;external;
procedure Tcl_UpdateLinkedVar(interp:PTcl_Interp; varName:PChar);cdecl;external;
function Tcl_UpVar(interp:PTcl_Interp; frameName:PChar; varName:PChar; localName:PChar; flags:cint):cint;cdecl;external;
function Tcl_UpVar2(interp:PTcl_Interp; frameName:PChar; part1:PChar; part2:PChar; localName:PChar;
           flags:cint):cint;cdecl;external;
function Tcl_VarEval(interp:PTcl_Interp; args:array of const):cint;cdecl;external;
function Tcl_VarEval(interp:PTcl_Interp):cint;cdecl;external;
function Tcl_VarTraceInfo(interp:PTcl_Interp; varName:PChar; flags:cint; procPtr:Tcl_VarTraceProc; prevClientData:ClientData):ClientData;cdecl;external;
function Tcl_VarTraceInfo2(interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint; procPtr:Tcl_VarTraceProc;
           prevClientData:ClientData):ClientData;cdecl;external;
function Tcl_Write(chan:PTcl_Channel; s:PChar; slen:cint):cint;cdecl;external;
procedure Tcl_WrongNumArgs(interp:PTcl_Interp; objc:cint; objv:array of PTcl_Obj; message:PChar);cdecl;external;
function Tcl_DumpActiveMemory(fileName:PChar):cint;cdecl;external;
procedure Tcl_ValidateAllMemory(_file:PChar; line:cint);cdecl;external;
procedure Tcl_AppendResultVA(interp:PTcl_Interp; argList:Pointer{va_list});cdecl;external;
procedure Tcl_AppendStringsToObjVA(objPtr:PTcl_Obj; argList:Pointer{va_list});cdecl;external;
function Tcl_HashStats(tablePtr:PTcl_HashTable):PChar;cdecl;external;
function Tcl_ParseVar(interp:PTcl_Interp; start:PChar; termPtr:PPChar):PChar;cdecl;external;
function Tcl_PkgPresent(interp:PTcl_Interp; name:PChar; version:PChar; exact:cint):PChar;cdecl;external;
function Tcl_PkgPresentEx(interp:PTcl_Interp; name:PChar; version:PChar; exact:cint; clientDataPtr:PClientData):PChar;cdecl;external;
function Tcl_PkgProvide(interp:PTcl_Interp; name:PChar; version:PChar):cint;cdecl;external;
function Tcl_PkgRequire(interp:PTcl_Interp; name:PChar; version:PChar; exact:cint):PChar;cdecl;external;
procedure Tcl_SetErrorCodeVA(interp:PTcl_Interp; argList:Pointer{va_list});cdecl;external;
function Tcl_VarEvalVA(interp:PTcl_Interp; argList:Pointer{va_list}):cint;cdecl;external;
function Tcl_WaitPid(pid:PTcl_Pid; statPtr:pcint; options:cint):PTcl_Pid;cdecl;external;
procedure Tcl_PanicVA(format:PChar; argList:Pointer{va_list});cdecl;external;
procedure Tcl_GetVersion(major:pcint; minor:pcint; patchLevel:pcint; _type:pcint);cdecl;external;
procedure Tcl_InitMemory(interp:PTcl_Interp);cdecl;external;
function Tcl_StackChannel(interp:PTcl_Interp; typePtr:PTcl_ChannelType; instanceData:ClientData; mask:cint; prevChan:PTcl_Channel):PTcl_Channel;cdecl;external;
function Tcl_UnstackChannel(interp:PTcl_Interp; chan:PTcl_Channel):cint;cdecl;external;
function Tcl_GetStackedChannel(chan:PTcl_Channel):PTcl_Channel;cdecl;external;
procedure Tcl_SetMainLoop(proc:Tcl_MainLoopProc);cdecl;external;
procedure Tcl_AppendObjToObj(objPtr:PTcl_Obj; appendObjPtr:PTcl_Obj);cdecl;external;
function Tcl_CreateEncoding(typePtr:PTcl_EncodingType):PTcl_Encoding;cdecl;external;
procedure Tcl_CreateThreadExitHandler(proc:Tcl_ExitProc; clientData:ClientData);cdecl;external;
procedure Tcl_DeleteThreadExitHandler(proc:Tcl_ExitProc; clientData:ClientData);cdecl;external;
procedure Tcl_DiscardResult(statePtr:PTcl_SavedResult);cdecl;external;
function Tcl_EvalEx(interp:PTcl_Interp; script:PChar; numBytes:cint; flags:cint):cint;cdecl;external;
function Tcl_EvalObjv(interp:PTcl_Interp; objc:cint; objv:array of PTcl_Obj; flags:cint):cint;cdecl;external;
function Tcl_EvalObjEx(interp:PTcl_Interp; objPtr:PTcl_Obj; flags:cint):cint;cdecl;external;
procedure Tcl_ExitThread(status:cint);cdecl;external;
function Tcl_ExternalToUtf(interp:PTcl_Interp; encoding:PTcl_Encoding; src:PChar; srcLen:cint; flags:cint;
           statePtr:PTcl_EncodingState; dst:PChar; dstLen:cint; srcReadPtr:pcint; dstWrotePtr:pcint;
           dstCharsPtr:pcint):cint;cdecl;external;
function Tcl_ExternalToUtfDString(encoding:PTcl_Encoding; src:PChar; srcLen:cint; dsPtr:PTcl_DString):PChar;cdecl;external;
procedure Tcl_FinalizeThread;cdecl;external;
procedure Tcl_FinalizeNotifier(clientData:ClientData);cdecl;external;
procedure Tcl_FreeEncoding(encoding:PTcl_Encoding);cdecl;external;
function Tcl_GetCurrentThread:PTcl_ThreadId;cdecl;external;
function Tcl_GetEncoding(interp:PTcl_Interp; name:PChar):PTcl_Encoding;cdecl;external;
function Tcl_GetEncodingName(encoding:PTcl_Encoding):PChar;cdecl;external;
procedure Tcl_GetEncodingNames(interp:PTcl_Interp);cdecl;external;
function Tcl_GetIndexFromObjStruct(interp:PTcl_Interp; objPtr:PTcl_Obj; tablePtr:pointer; offset:cint; msg:PChar;
           flags:cint; indexPtr:pcint):cint;cdecl;external;
function Tcl_GetThreadData(keyPtr:PTcl_ThreadDataKey; size:cint):pointer;cdecl;external;
function Tcl_GetVar2Ex(interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint):PTcl_Obj;cdecl;external;
function Tcl_InitNotifier:ClientData;cdecl;external;
procedure Tcl_MutexLock(mutexPtr:PTcl_Mutex);cdecl;external;
procedure Tcl_MutexUnlock(mutexPtr:PTcl_Mutex);cdecl;external;
procedure Tcl_ConditionNotify(condPtr:PTcl_Condition);cdecl;external;
procedure Tcl_ConditionWait(condPtr:PTcl_Condition; mutexPtr:PTcl_Mutex; timePtr:PTcl_Time);cdecl;external;
function Tcl_NumUtfChars(src:PChar; length:cint):cint;cdecl;external;
function Tcl_ReadChars(channel:PTcl_Channel; objPtr:PTcl_Obj; charsToRead:cint; appendFlag:cint):cint;cdecl;external;
procedure Tcl_RestoreResult(interp:PTcl_Interp; statePtr:PTcl_SavedResult);cdecl;external;
procedure Tcl_SaveResult(interp:PTcl_Interp; statePtr:PTcl_SavedResult);cdecl;external;
function Tcl_SetSystemEncoding(interp:PTcl_Interp; name:PChar):cint;cdecl;external;
function Tcl_SetVar2Ex(interp:PTcl_Interp; part1:PChar; part2:PChar; newValuePtr:PTcl_Obj; flags:cint):PTcl_Obj;cdecl;external;
procedure Tcl_ThreadAlert(threadId:PTcl_ThreadId);cdecl;external;
procedure Tcl_ThreadQueueEvent(threadId:PTcl_ThreadId; evPtr:PTcl_Event; position:Tcl_QueuePosition);cdecl;external;
function Tcl_UniCharAtIndex(src:PChar; index:cint):Tcl_UniChar;cdecl;external;
function Tcl_UniCharToLower(ch:cint):Tcl_UniChar;cdecl;external;
function Tcl_UniCharToTitle(ch:cint):Tcl_UniChar;cdecl;external;
function Tcl_UniCharToUpper(ch:cint):Tcl_UniChar;cdecl;external;
function Tcl_UniCharToUtf(ch:cint; buf:PChar):cint;cdecl;external;
function Tcl_UtfAtIndex(src:PChar; index:cint):PChar;cdecl;external;
function Tcl_UtfCharComplete(src:PChar; length:cint):cint;cdecl;external;
function Tcl_UtfBackslash(src:PChar; readPtr:pcint; dst:PChar):cint;cdecl;external;
function Tcl_UtfFindFirst(src:PChar; ch:cint):PChar;cdecl;external;
function Tcl_UtfFindLast(src:PChar; ch:cint):PChar;cdecl;external;
function Tcl_UtfNext(src:PChar):PChar;cdecl;external;
function Tcl_UtfPrev(src:PChar; start:PChar):PChar;cdecl;external;
function Tcl_UtfToExternal(interp:PTcl_Interp; encoding:PTcl_Encoding; src:PChar; srcLen:cint; flags:cint;
           statePtr:PTcl_EncodingState; dst:PChar; dstLen:cint; srcReadPtr:pcint; dstWrotePtr:pcint;
           dstCharsPtr:pcint):cint;cdecl;external;
function Tcl_UtfToExternalDString(encoding:PTcl_Encoding; src:PChar; srcLen:cint; dsPtr:PTcl_DString):PChar;cdecl;external;
function Tcl_UtfToLower(src:PChar):cint;cdecl;external;
function Tcl_UtfToTitle(src:PChar):cint;cdecl;external;
function Tcl_UtfToUniChar(src:PChar; chPtr:PTcl_UniChar):cint;cdecl;external;
function Tcl_UtfToUpper(src:PChar):cint;cdecl;external;
function Tcl_WriteChars(chan:PTcl_Channel; src:PChar; srcLen:cint):cint;cdecl;external;
function Tcl_WriteObj(chan:PTcl_Channel; objPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_GetString(objPtr:PTcl_Obj):PChar;cdecl;external;
function Tcl_GetDefaultEncodingDir:PChar;cdecl;external;
procedure Tcl_SetDefaultEncodingDir(path:PChar);cdecl;external;
procedure Tcl_AlertNotifier(clientData:ClientData);cdecl;external;
procedure Tcl_ServiceModeHook(mode:cint);cdecl;external;
function Tcl_UniCharIsAlnum(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsAlpha(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsDigit(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsLower(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsSpace(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsUpper(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsWordChar(ch:cint):cint;cdecl;external;
function Tcl_UniCharLen(uniStr:PTcl_UniChar):cint;cdecl;external;
function Tcl_UniCharNcmp(ucs:PTcl_UniChar; uct:PTcl_UniChar; numChars:culong):cint;cdecl;external;
function Tcl_UniCharToUtfDString(uniStr:PTcl_UniChar; uniLength:cint; dsPtr:PTcl_DString):PChar;cdecl;external;
function Tcl_UtfToUniCharDString(src:PChar; length:cint; dsPtr:PTcl_DString):PTcl_UniChar;cdecl;external;
function Tcl_GetRegExpFromObj(interp:PTcl_Interp; patObj:PTcl_Obj; flags:cint):PTcl_RegExp;cdecl;external;
function Tcl_EvalTokens(interp:PTcl_Interp; tokenPtr:PTcl_Token; count:cint):PTcl_Obj;cdecl;external;
procedure Tcl_FreeParse(parsePtr:PTcl_Parse);cdecl;external;
procedure Tcl_LogCommandInfo(interp:PTcl_Interp; script:PChar; command:PChar; length:cint);cdecl;external;
function Tcl_ParseBraces(interp:PTcl_Interp; start:PChar; numBytes:cint; parsePtr:PTcl_Parse; append:cint;
           termPtr:PPChar):cint;cdecl;external;
function Tcl_ParseCommand(interp:PTcl_Interp; start:PChar; numBytes:cint; nested:cint; parsePtr:PTcl_Parse):cint;cdecl;external;
function Tcl_ParseExpr(interp:PTcl_Interp; start:PChar; numBytes:cint; parsePtr:PTcl_Parse):cint;cdecl;external;
function Tcl_ParseQuotedString(interp:PTcl_Interp; start:PChar; numBytes:cint; parsePtr:PTcl_Parse; append:cint;
           termPtr:PPChar):cint;cdecl;external;
function Tcl_ParseVarName(interp:PTcl_Interp; start:PChar; numBytes:cint; parsePtr:PTcl_Parse; append:cint):cint;cdecl;external;
function Tcl_GetCwd(interp:PTcl_Interp; cwdPtr:PTcl_DString):PChar;cdecl;external;
function Tcl_Chdir(dirName:PChar):cint;cdecl;external;
function Tcl_Access(path:PChar; mode:cint):cint;cdecl;external;
function Tcl_Stat(path:PChar; bufPtr:Pstat):cint;cdecl;external;
function Tcl_UtfNcmp(s1:PChar; s2:PChar; n:culong):cint;cdecl;external;
function Tcl_UtfNcasecmp(s1:PChar; s2:PChar; n:culong):cint;cdecl;external;
function Tcl_StringCaseMatch(str:PChar; pattern:PChar; nocase:cint):cint;cdecl;external;
function Tcl_UniCharIsControl(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsGraph(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsPrint(ch:cint):cint;cdecl;external;
function Tcl_UniCharIsPunct(ch:cint):cint;cdecl;external;
function Tcl_RegExpExecObj(interp:PTcl_Interp; regexp:PTcl_RegExp; textObj:PTcl_Obj; offset:cint; nmatches:cint;
           flags:cint):cint;cdecl;external;
procedure Tcl_RegExpGetInfo(regexp:PTcl_RegExp; infoPtr:PTcl_RegExpInfo);cdecl;external;
function Tcl_NewUnicodeObj(unicode:PTcl_UniChar; numChars:cint):PTcl_Obj;cdecl;external;
procedure Tcl_SetUnicodeObj(objPtr:PTcl_Obj; unicode:PTcl_UniChar; numChars:cint);cdecl;external;
function Tcl_GetCharLength(objPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_GetUniChar(objPtr:PTcl_Obj; index:cint):Tcl_UniChar;cdecl;external;
function Tcl_GetUnicode(objPtr:PTcl_Obj):PTcl_UniChar;cdecl;external;
function Tcl_GetRange(objPtr:PTcl_Obj; first:cint; last:cint):PTcl_Obj;cdecl;external;
procedure Tcl_AppendUnicodeToObj(objPtr:PTcl_Obj; unicode:PTcl_UniChar; length:cint);cdecl;external;
function Tcl_RegExpMatchObj(interp:PTcl_Interp; textObj:PTcl_Obj; patternObj:PTcl_Obj):cint;cdecl;external;
procedure Tcl_SetNotifier(notifierProcPtr:Tcl_NotifierProcs);cdecl;external;
function Tcl_GetAllocMutex:PTcl_Mutex;cdecl;external;
function Tcl_GetChannelNames(interp:PTcl_Interp):cint;cdecl;external;
function Tcl_GetChannelNamesEx(interp:PTcl_Interp; pattern:PChar):cint;cdecl;external;
function Tcl_ProcObjCmd(clientData:ClientData; interp:PTcl_Interp; objc:cint; objv:array of PTcl_Obj):cint;cdecl;external;
procedure Tcl_ConditionFinalize(condPtr:PTcl_Condition);cdecl;external;
procedure Tcl_MutexFinalize(mutex:PTcl_Mutex);cdecl;external;
function Tcl_CreateThread(idPtr:PTcl_ThreadId; proc:Tcl_ThreadCreateProc; clientData:ClientData; stackSize:cint; flags:cint):cint;cdecl;external;
function Tcl_ReadRaw(chan:PTcl_Channel; dst:PChar; bytesToRead:cint):cint;cdecl;external;
function Tcl_WriteRaw(chan:PTcl_Channel; src:PChar; srcLen:cint):cint;cdecl;external;
function Tcl_GetTopChannel(chan:PTcl_Channel):PTcl_Channel;cdecl;external;
function Tcl_ChannelBuffered(chan:PTcl_Channel):cint;cdecl;external;
function Tcl_ChannelName(chanTypePtr:PTcl_ChannelType):PChar;cdecl;external;
function Tcl_ChannelVersion(chanTypePtr:PTcl_ChannelType):PTcl_ChannelTypeVersion;cdecl;external;
function Tcl_ChannelBlockModeProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverBlockModeProc;cdecl;external;
function Tcl_ChannelCloseProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverCloseProc;cdecl;external;
function Tcl_ChannelClose2Proc(chanTypePtr:PTcl_ChannelType):Tcl_DriverClose2Proc;cdecl;external;
function Tcl_ChannelInputProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverInputProc;cdecl;external;
function Tcl_ChannelOutputProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverOutputProc;cdecl;external;
function Tcl_ChannelSeekProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverSeekProc;cdecl;external;
function Tcl_ChannelSetOptionProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverSetOptionProc;cdecl;external;
function Tcl_ChannelGetOptionProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverGetOptionProc;cdecl;external;
function Tcl_ChannelWatchProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverWatchProc;cdecl;external;
function Tcl_ChannelGetHandleProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverGetHandleProc;cdecl;external;
function Tcl_ChannelFlushProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverFlushProc;cdecl;external;
function Tcl_ChannelHandlerProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverHandlerProc;cdecl;external;
function Tcl_JoinThread(threadId:PTcl_ThreadId; result:pcint):cint;cdecl;external;
function Tcl_IsChannelShared(channel:PTcl_Channel):cint;cdecl;external;
function Tcl_IsChannelRegistered(interp:PTcl_Interp; channel:PTcl_Channel):cint;cdecl;external;
procedure Tcl_CutChannel(channel:PTcl_Channel);cdecl;external;
procedure Tcl_SpliceChannel(channel:PTcl_Channel);cdecl;external;
procedure Tcl_ClearChannelHandlers(channel:PTcl_Channel);cdecl;external;
function Tcl_IsChannelExisting(channelName:PChar):cint;cdecl;external;
function Tcl_UniCharNcasecmp(ucs:PTcl_UniChar; uct:PTcl_UniChar; numChars:culong):cint;cdecl;external;
function Tcl_UniCharCaseMatch(uniStr:PTcl_UniChar; uniPattern:PTcl_UniChar; nocase:cint):cint;cdecl;external;
function Tcl_FindHashEntry(tablePtr:PTcl_HashTable; key:PChar):PTcl_HashEntry;cdecl;external;
function Tcl_CreateHashEntry(tablePtr:PTcl_HashTable; key:PChar; newPtr:pcint):PTcl_HashEntry;cdecl;external;
procedure Tcl_InitCustomHashTable(tablePtr:PTcl_HashTable; keyType:cint; typePtr:PTcl_HashKeyType);cdecl;external;
procedure Tcl_InitObjHashTable(tablePtr:PTcl_HashTable);cdecl;external;
function Tcl_CommandTraceInfo(interp:PTcl_Interp; varName:PChar; flags:cint; procPtr:PTcl_CommandTraceProc; prevClientData:ClientData):ClientData;cdecl;external;
function Tcl_TraceCommand(interp:PTcl_Interp; varName:PChar; flags:cint; proc:PTcl_CommandTraceProc; clientData:ClientData):cint;cdecl;external;
procedure Tcl_UntraceCommand(interp:PTcl_Interp; varName:PChar; flags:cint; proc:PTcl_CommandTraceProc; clientData:ClientData);cdecl;external;
function Tcl_AttemptAlloc(size:cuint):PChar;cdecl;external;
function Tcl_AttemptDbCkalloc(size:cuint; _file:PChar; line:cint):PChar;cdecl;external;
function Tcl_AttemptRealloc(ptr:PChar; size:cuint):PChar;cdecl;external;
function Tcl_AttemptDbCkrealloc(ptr:PChar; size:cuint; _file:PChar; line:cint):PChar;cdecl;external;
function Tcl_AttemptSetObjLength(objPtr:PTcl_Obj; length:cint):cint;cdecl;external;
function Tcl_GetChannelThread(channel:PTcl_Channel):PTcl_ThreadId;cdecl;external;
function Tcl_GetUnicodeFromObj(objPtr:PTcl_Obj; lengthPtr:pcint):PTcl_UniChar;cdecl;external;
function Tcl_GetMathFuncInfo(interp:PTcl_Interp; name:PChar; numArgsPtr:pcint; argTypesPtr:PPTcl_ValueType; procPtr:Tcl_MathProc;
           clientDataPtr:PClientData):cint;cdecl;external;
function Tcl_ListMathFuncs(interp:PTcl_Interp; pattern:PChar):PTcl_Obj;cdecl;external;
function Tcl_SubstObj(interp:PTcl_Interp; objPtr:PTcl_Obj; flags:cint):PTcl_Obj;cdecl;external;
function Tcl_DetachChannel(interp:PTcl_Interp; channel:PTcl_Channel):cint;cdecl;external;
function Tcl_IsStandardChannel(channel:PTcl_Channel):cint;cdecl;external;
function Tcl_FSCopyFile(srcPathPtr:PTcl_Obj; destPathPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_FSCopyDirectory(srcPathPtr:PTcl_Obj; destPathPtr:PTcl_Obj; errorPtr:PPTcl_Obj):cint;cdecl;external;
function Tcl_FSCreateDirectory(pathPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_FSDeleteFile(pathPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_FSLoadFile(interp:PTcl_Interp; pathPtr:PTcl_Obj; sym1:PChar; sym2:PChar; proc1Ptr:Tcl_PackageInitProc;
           proc2Ptr:Tcl_PackageInitProc; handlePtr:PTcl_LoadHandle; unloadProcPtr:Tcl_FSUnloadFileProc):cint;cdecl;external;
function Tcl_FSMatchInDirectory(interp:PTcl_Interp; result:PTcl_Obj; pathPtr:PTcl_Obj; pattern:PChar; types:PTcl_GlobTypeData):cint;cdecl;external;
function Tcl_FSLink(pathPtr:PTcl_Obj; toPtr:PTcl_Obj; linkAction:cint):PTcl_Obj;cdecl;external;
function Tcl_FSRemoveDirectory(pathPtr:PTcl_Obj; recursive:cint; errorPtr:PPTcl_Obj):cint;cdecl;external;
function Tcl_FSRenameFile(srcPathPtr:PTcl_Obj; destPathPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_FSLstat(pathPtr:PTcl_Obj; buf:PTcl_StatBuf):cint;cdecl;external;
function Tcl_FSUtime(pathPtr:PTcl_Obj; tval:Putimbuf):cint;cdecl;external;
function Tcl_FSFileAttrsGet(interp:PTcl_Interp; index:cint; pathPtr:PTcl_Obj; objPtrRef:PPTcl_Obj):cint;cdecl;external;
function Tcl_FSFileAttrsSet(interp:PTcl_Interp; index:cint; pathPtr:PTcl_Obj; objPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_FSFileAttrStrings(pathPtr:PTcl_Obj; objPtrRef:PPTcl_Obj):pPChar;cdecl;external;
function Tcl_FSStat(pathPtr:PTcl_Obj; buf:PTcl_StatBuf):cint;cdecl;external;
function Tcl_FSAccess(pathPtr:PTcl_Obj; mode:cint):cint;cdecl;external;
function Tcl_FSOpenFileChannel(interp:PTcl_Interp; pathPtr:PTcl_Obj; modeString:PChar; permissions:cint):PTcl_Channel;cdecl;external;
function Tcl_FSGetCwd(interp:PTcl_Interp):PTcl_Obj;cdecl;external;
function Tcl_FSChdir(pathPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_FSConvertToPathType(interp:PTcl_Interp; pathPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_FSJoinPath(listObj:PTcl_Obj; elements:cint):PTcl_Obj;cdecl;external;
function Tcl_FSSplitPath(pathPtr:PTcl_Obj; lenPtr:pcint):PTcl_Obj;cdecl;external;
function Tcl_FSEqualPaths(firstPtr:PTcl_Obj; secondPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_FSGetNormalizedPath(interp:PTcl_Interp; pathPtr:PTcl_Obj):PTcl_Obj;cdecl;external;
function Tcl_FSJoinToPath(pathPtr:PTcl_Obj; objc:cint; objv:array of PTcl_Obj):PTcl_Obj;cdecl;external;
function Tcl_FSGetInternalRep(pathPtr:PTcl_Obj; fsPtr:PTcl_Filesystem):ClientData;cdecl;external;
function Tcl_FSGetTranslatedPath(interp:PTcl_Interp; pathPtr:PTcl_Obj):PTcl_Obj;cdecl;external;
function Tcl_FSEvalFile(interp:PTcl_Interp; fileName:PTcl_Obj):cint;cdecl;external;
function Tcl_FSNewNativePath(fromFilesystem:PTcl_Filesystem; clientData:ClientData):PTcl_Obj;cdecl;external;
function Tcl_FSGetNativePath(pathPtr:PTcl_Obj):PChar;cdecl;external;
function Tcl_FSFileSystemInfo(pathPtr:PTcl_Obj):PTcl_Obj;cdecl;external;
function Tcl_FSPathSeparator(pathPtr:PTcl_Obj):PTcl_Obj;cdecl;external;
function Tcl_FSListVolumes:PTcl_Obj;cdecl;external;
function Tcl_FSRegister(clientData:ClientData; fsPtr:PTcl_Filesystem):cint;cdecl;external;
function Tcl_FSUnregister(fsPtr:PTcl_Filesystem):cint;cdecl;external;
function Tcl_FSData(fsPtr:PTcl_Filesystem):ClientData;cdecl;external;
function Tcl_FSGetTranslatedStringPath(interp:PTcl_Interp; pathPtr:PTcl_Obj):PChar;cdecl;external;
function Tcl_FSGetFileSystemForPath(pathPtr:PTcl_Obj):PTcl_Filesystem;cdecl;external;
function Tcl_FSGetPathType(pathPtr:PTcl_Obj):Tcl_PathType;cdecl;external;
function Tcl_OutputBuffered(chan:PTcl_Channel):cint;cdecl;external;
procedure Tcl_FSMountsChanged(fsPtr:PTcl_Filesystem);cdecl;external;
function Tcl_EvalTokensStandard(interp:PTcl_Interp; tokenPtr:PTcl_Token; count:cint):cint;cdecl;external;
procedure Tcl_GetTime(timeBuf:PTcl_Time);cdecl;external;
function Tcl_CreateObjTrace(interp:PTcl_Interp; level:cint; flags:cint; objProc:Tcl_CmdObjTraceProc; clientData:ClientData; 
           delProc:Tcl_CmdObjTraceDeleteProc):PTcl_Trace;cdecl;external;
function Tcl_GetCommandInfoFromToken(token:PTcl_Command; infoPtr:PTcl_CmdInfo):cint;cdecl;external;
function Tcl_SetCommandInfoFromToken(token:PTcl_Command; infoPtr:PTcl_CmdInfo):cint;cdecl;external;
function Tcl_DbNewWideIntObj(wideValue:Tcl_WideInt; _file:PChar; line:cint):PTcl_Obj;cdecl;external;
function Tcl_GetWideIntFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; widePtr:PTcl_WideInt):cint;cdecl;external;
function Tcl_NewWideIntObj(wideValue:Tcl_WideInt):PTcl_Obj;cdecl;external;
procedure Tcl_SetWideIntObj(objPtr:PTcl_Obj; wideValue:Tcl_WideInt);cdecl;external;
function Tcl_AllocStatBuf:PTcl_StatBuf;cdecl;external;
function Tcl_Seek(chan:PTcl_Channel; offset:Tcl_WideInt; mode:cint):Tcl_WideInt;cdecl;external;
function Tcl_Tell(chan:PTcl_Channel):Tcl_WideInt;cdecl;external;
function Tcl_ChannelWideSeekProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverWideSeekProc;cdecl;external;
function Tcl_DictObjPut(interp:PTcl_Interp; dictPtr:PTcl_Obj; keyPtr:PTcl_Obj; valuePtr:PTcl_Obj):cint;cdecl;external;
function Tcl_DictObjGet(interp:PTcl_Interp; dictPtr:PTcl_Obj; keyPtr:PTcl_Obj; valuePtrPtr:PPTcl_Obj):cint;cdecl;external;
function Tcl_DictObjRemove(interp:PTcl_Interp; dictPtr:PTcl_Obj; keyPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_DictObjSize(interp:PTcl_Interp; dictPtr:PTcl_Obj; sizePtr:pcint):cint;cdecl;external;
function Tcl_DictObjFirst(interp:PTcl_Interp; dictPtr:PTcl_Obj; searchPtr:PTcl_DictSearch; keyPtrPtr:PPTcl_Obj; valuePtrPtr:PPTcl_Obj; 
           donePtr:pcint):cint;cdecl;external;
procedure Tcl_DictObjNext(searchPtr:PTcl_DictSearch; keyPtrPtr:PPTcl_Obj; valuePtrPtr:PPTcl_Obj; donePtr:pcint);cdecl;external;
procedure Tcl_DictObjDone(searchPtr:PTcl_DictSearch);cdecl;external;
function Tcl_DictObjPutKeyList(interp:PTcl_Interp; dictPtr:PTcl_Obj; keyc:cint; keyv:PPTcl_Obj; valuePtr:PTcl_Obj):cint;cdecl;external;
function Tcl_DictObjRemoveKeyList(interp:PTcl_Interp; dictPtr:PTcl_Obj; keyc:cint; keyv:PPTcl_Obj):cint;cdecl;external;
function Tcl_NewDictObj:PTcl_Obj;cdecl;external;
function Tcl_DbNewDictObj(_file:PChar; line:cint):PTcl_Obj;cdecl;external;
procedure Tcl_RegisterConfig(interp:PTcl_Interp; pkgName:PChar; configuration:PTcl_Config; valEncoding:PChar);cdecl;external;
function Tcl_CreateNamespace(interp:PTcl_Interp; name:PChar; clientData:ClientData; deleteProc:Tcl_NamespaceDeleteProc):PTcl_Namespace;cdecl;external;
procedure Tcl_DeleteNamespace(nsPtr:PTcl_Namespace);cdecl;external;
function Tcl_AppendExportList(interp:PTcl_Interp; nsPtr:PTcl_Namespace; objPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_Export(interp:PTcl_Interp; nsPtr:PTcl_Namespace; pattern:PChar; resetListFirst:cint):cint;cdecl;external;
function Tcl_Import(interp:PTcl_Interp; nsPtr:PTcl_Namespace; pattern:PChar; allowOverwrite:cint):cint;cdecl;external;
function Tcl_ForgetImport(interp:PTcl_Interp; nsPtr:PTcl_Namespace; pattern:PChar):cint;cdecl;external;
function Tcl_GetCurrentNamespace(interp:PTcl_Interp):PTcl_Namespace;cdecl;external;
function Tcl_GetGlobalNamespace(interp:PTcl_Interp):PTcl_Namespace;cdecl;external;
function Tcl_FindNamespace(interp:PTcl_Interp; name:PChar; contextNsPtr:PTcl_Namespace; flags:cint):PTcl_Namespace;cdecl;external;
function Tcl_FindCommand(interp:PTcl_Interp; name:PChar; contextNsPtr:PTcl_Namespace; flags:cint):PTcl_Command;cdecl;external;
function Tcl_GetCommandFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj):PTcl_Command;cdecl;external;
procedure Tcl_GetCommandFullName(interp:PTcl_Interp; command:PTcl_Command; objPtr:PTcl_Obj);cdecl;external;
function Tcl_FSEvalFileEx(interp:PTcl_Interp; fileName:PTcl_Obj; encodingName:PChar):cint;cdecl;external;
function Tcl_SetExitProc(proc:Tcl_ExitProc):Tcl_ExitProc;cdecl;external;
procedure Tcl_LimitAddHandler(interp:PTcl_Interp; _type:cint; handlerProc:Tcl_LimitHandlerProc; clientData:ClientData; deleteProc:Tcl_LimitHandlerDeleteProc);cdecl;external;
procedure Tcl_LimitRemoveHandler(interp:PTcl_Interp; _type:cint; handlerProc:Tcl_LimitHandlerProc; clientData:ClientData);cdecl;external;
function Tcl_LimitReady(interp:PTcl_Interp):cint;cdecl;external;
function Tcl_LimitCheck(interp:PTcl_Interp):cint;cdecl;external;
function Tcl_LimitExceeded(interp:PTcl_Interp):cint;cdecl;external;
procedure Tcl_LimitSetCommands(interp:PTcl_Interp; commandLimit:cint);cdecl;external;
procedure Tcl_LimitSetTime(interp:PTcl_Interp; timeLimitPtr:PTcl_Time);cdecl;external;
procedure Tcl_LimitSetGranularity(interp:PTcl_Interp; _type:cint; granularity:cint);cdecl;external;
function Tcl_LimitTypeEnabled(interp:PTcl_Interp; _type:cint):cint;cdecl;external;
function Tcl_LimitTypeExceeded(interp:PTcl_Interp; _type:cint):cint;cdecl;external;
procedure Tcl_LimitTypeSet(interp:PTcl_Interp; _type:cint);cdecl;external;
procedure Tcl_LimitTypeReset(interp:PTcl_Interp; _type:cint);cdecl;external;
function Tcl_LimitGetCommands(interp:PTcl_Interp):cint;cdecl;external;
procedure Tcl_LimitGetTime(interp:PTcl_Interp; timeLimitPtr:PTcl_Time);cdecl;external;
function Tcl_LimitGetGranularity(interp:PTcl_Interp; _type:cint):cint;cdecl;external;
function Tcl_SaveInterpState(interp:PTcl_Interp; status:cint):PTcl_InterpState;cdecl;external;
function Tcl_RestoreInterpState(interp:PTcl_Interp; state:PTcl_InterpState):cint;cdecl;external;
procedure Tcl_DiscardInterpState(state:PTcl_InterpState);cdecl;external;
function Tcl_SetReturnOptions(interp:PTcl_Interp; options:PTcl_Obj):cint;cdecl;external;
function Tcl_GetReturnOptions(interp:PTcl_Interp; result:cint):PTcl_Obj;cdecl;external;
function Tcl_IsEnsemble(token:PTcl_Command):cint;cdecl;external;
function Tcl_CreateEnsemble(interp:PTcl_Interp; name:PChar; namespacePtr:PTcl_Namespace; flags:cint):PTcl_Command;cdecl;external;
function Tcl_FindEnsemble(interp:PTcl_Interp; cmdNameObj:PTcl_Obj; flags:cint):PTcl_Command;cdecl;external;
function Tcl_SetEnsembleSubcommandList(interp:PTcl_Interp; token:PTcl_Command; subcmdList:PTcl_Obj):cint;cdecl;external;
function Tcl_SetEnsembleMappingDict(interp:PTcl_Interp; token:PTcl_Command; mapDict:PTcl_Obj):cint;cdecl;external;
function Tcl_SetEnsembleUnknownHandler(interp:PTcl_Interp; token:PTcl_Command; unknownList:PTcl_Obj):cint;cdecl;external;
function Tcl_SetEnsembleFlags(interp:PTcl_Interp; token:PTcl_Command; flags:cint):cint;cdecl;external;
function Tcl_GetEnsembleSubcommandList(interp:PTcl_Interp; token:PTcl_Command; subcmdListPtr:PPTcl_Obj):cint;cdecl;external;
function Tcl_GetEnsembleMappingDict(interp:PTcl_Interp; token:PTcl_Command; mapDictPtr:PPTcl_Obj):cint;cdecl;external;
function Tcl_GetEnsembleUnknownHandler(interp:PTcl_Interp; token:PTcl_Command; unknownListPtr:PPTcl_Obj):cint;cdecl;external;
function Tcl_GetEnsembleFlags(interp:PTcl_Interp; token:PTcl_Command; flagsPtr:pcint):cint;cdecl;external;
function Tcl_GetEnsembleNamespace(interp:PTcl_Interp; token:PTcl_Command; namespacePtrPtr:PPTcl_Namespace):cint;cdecl;external;
procedure Tcl_SetTimeProc(getProc:Tcl_GetTimeProc; scaleProc:Tcl_ScaleTimeProc; clientData:ClientData);cdecl;external;
procedure Tcl_QueryTimeProc(getProc:Tcl_GetTimeProc; scaleProc:Tcl_ScaleTimeProc; clientData:PClientData);cdecl;external;
function Tcl_ChannelThreadActionProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverThreadActionProc;cdecl;external;
function Tcl_NewBignumObj(value:Pmp_int):PTcl_Obj;cdecl;external;
function Tcl_DbNewBignumObj(value:Pmp_int; _file:PChar; line:cint):PTcl_Obj;cdecl;external;
procedure Tcl_SetBignumObj(obj:PTcl_Obj; value:Pmp_int);cdecl;external;
function Tcl_GetBignumFromObj(interp:PTcl_Interp; obj:PTcl_Obj; value:Pmp_int):cint;cdecl;external;
function Tcl_TakeBignumFromObj(interp:PTcl_Interp; obj:PTcl_Obj; value:Pmp_int):cint;cdecl;external;
function Tcl_TruncateChannel(chan:PTcl_Channel; length:Tcl_WideInt):cint;cdecl;external;
function Tcl_ChannelTruncateProc(chanTypePtr:PTcl_ChannelType):Tcl_DriverTruncateProc;cdecl;external;
procedure Tcl_SetChannelErrorInterp(interp:PTcl_Interp; msg:PTcl_Obj);cdecl;external;
procedure Tcl_GetChannelErrorInterp(interp:PTcl_Interp; msg:PPTcl_Obj);cdecl;external;
procedure Tcl_SetChannelError(chan:PTcl_Channel; msg:PTcl_Obj);cdecl;external;
procedure Tcl_GetChannelError(chan:PTcl_Channel; msg:PPTcl_Obj);cdecl;external;
function Tcl_InitBignumFromDouble(interp:PTcl_Interp; initval:double; toInit:Pmp_int):cint;cdecl;external;
function Tcl_GetNamespaceUnknownHandler(interp:PTcl_Interp; nsPtr:PTcl_Namespace):PTcl_Obj;cdecl;external;
function Tcl_SetNamespaceUnknownHandler(interp:PTcl_Interp; nsPtr:PTcl_Namespace; handlerPtr:PTcl_Obj):cint;cdecl;external;
function Tcl_GetEncodingFromObj(interp:PTcl_Interp; objPtr:PTcl_Obj; encodingPtr:PTcl_Encoding):cint;cdecl;external;
function Tcl_GetEncodingSearchPath:PTcl_Obj;cdecl;external;
function Tcl_SetEncodingSearchPath(searchPath:PTcl_Obj):cint;cdecl;external;
function Tcl_GetEncodingNameFromEnvironment(bufPtr:PTcl_DString):PChar;cdecl;external;
function Tcl_PkgRequireProc(interp:PTcl_Interp; name:PChar; objc:cint; objv:array of PTcl_Obj; clientDataPtr:PClientData):cint;cdecl;external;
procedure Tcl_AppendObjToErrorInfo(interp:PTcl_Interp; objPtr:PTcl_Obj);cdecl;external;
procedure Tcl_AppendLimitedToObj(objPtr:PTcl_Obj; bytes:PChar; length:cint; limit:cint; ellipsis:PChar);cdecl;external;
function Tcl_Format(interp:PTcl_Interp; format:PChar; objc:cint; objv:array of PTcl_Obj):PTcl_Obj;cdecl;external;
function Tcl_AppendFormatToObj(interp:PTcl_Interp; objPtr:PTcl_Obj; format:PChar; objc:cint; objv:array of PTcl_Obj):cint;cdecl;external;
function Tcl_ObjPrintf(format:PChar; args:array of const):PTcl_Obj;cdecl;external;
function Tcl_ObjPrintf(format:PChar):PTcl_Obj;cdecl;external;
procedure Tcl_AppendPrintfToObj(objPtr:PTcl_Obj; format:PChar; args:array of const);cdecl;external;
procedure Tcl_AppendPrintfToObj(objPtr:PTcl_Obj; format:PChar);cdecl;external;

type
  PTclStubHooks = ^TclStubHooks;
  TclStubHooks = record
      tclPlatStubs    : Pointer; // PTclPlatStubs;
      tclIntStubs     : Pointer; // PTclIntStubs;
      tclIntPlatStubs : Pointer; // PTclIntPlatStubs;
    end;

  PTclStubs = ^TclStubs;
  TclStubs = record
      magic : cint;
      hooks : PTclStubHooks;
      tcl_PkgProvideEx : function (interp:PTcl_Interp; name:PChar; version:PChar; clientData:ClientData):cint;cdecl;
      tcl_PkgRequireEx : function (interp:PTcl_Interp; name:PChar; version:PChar; exact:cint; clientDataPtr:PClientData):PChar;
      tcl_Panic : procedure (format:PChar; args:array of const);cdecl;
      tcl_Alloc : function (size:cuint):PChar;
      tcl_Free : procedure (ptr:PChar);
      tcl_Realloc : function (ptr:PChar; size:cuint):PChar;
      tcl_DbCkalloc : function (size:cuint; _file:PChar; line:cint):PChar;
      tcl_DbCkfree : function (ptr:PChar; _file:PChar; line:cint):cint;
      tcl_DbCkrealloc : function (ptr:PChar; size:cuint; _file:PChar; line:cint):PChar;
      tcl_CreateFileHandler : procedure (fd:cint; mask:cint; proc:Tcl_FileProc; clientData:ClientData);
      //Win32: reserved9 : pointer;
      //MacOSX: tcl_CreateFileHandler : procedure (fd:cint; mask:cint; proc:Tcl_FileProc; clientData:ClientData);
      tcl_DeleteFileHandler : procedure (fd:cint);
      //Win32: reserved10 : pointer;
      //MacOSX: tcl_DeleteFileHandler : procedure (fd:cint);
      tcl_SetTimer : procedure (timePtr:PTcl_Time);
      tcl_Sleep : procedure (ms:cint);
      tcl_WaitForEvent : function (timePtr:PTcl_Time):cint;
      tcl_AppendAllObjTypes : function (interp:PTcl_Interp; objPtr:PTcl_Obj):cint;
      tcl_AppendStringsToObj : procedure (objPtr:PTcl_Obj; args:array of const);cdecl;
      tcl_AppendToObj : procedure (objPtr:PTcl_Obj; bytes:PChar; length:cint);
      tcl_ConcatObj : function (objc:cint; objv:array of PTcl_Obj):PTcl_Obj;
      tcl_ConvertToType : function (interp:PTcl_Interp; objPtr:PTcl_Obj; typePtr:PTcl_ObjType):cint;
      tcl_DbDecrRefCount : procedure (objPtr:PTcl_Obj; _file:PChar; line:cint);
      tcl_DbIncrRefCount : procedure (objPtr:PTcl_Obj; _file:PChar; line:cint);
      tcl_DbIsShared : function (objPtr:PTcl_Obj; _file:PChar; line:cint):cint;
      tcl_DbNewBooleanObj : function (boolValue:cint; _file:PChar; line:cint):PTcl_Obj;
      tcl_DbNewByteArrayObj : function (bytes:pcuchar; length:cint; _file:PChar; line:cint):PTcl_Obj;
      tcl_DbNewDoubleObj : function (doubleValue:double; _file:PChar; line:cint):PTcl_Obj;
      tcl_DbNewListObj : function (objc:cint; objv:PPTcl_Obj; _file:PChar; line:cint):PTcl_Obj;
      tcl_DbNewLongObj : function (longValue:clong; _file:PChar; line:cint):PTcl_Obj;
      tcl_DbNewObj : function (_file:PChar; line:cint):PTcl_Obj;
      tcl_DbNewStringObj : function (bytes:PChar; length:cint; _file:PChar; line:cint):PTcl_Obj;
      tcl_DuplicateObj : function (objPtr:PTcl_Obj):PTcl_Obj;
      tclFreeObj : procedure (objPtr:PTcl_Obj);
      tcl_GetBoolean : function (interp:PTcl_Interp; src:PChar; boolPtr:pcint):cint;
      tcl_GetBooleanFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; boolPtr:pcint):cint;
      tcl_GetByteArrayFromObj : function (objPtr:PTcl_Obj; lengthPtr:pcint):pcuchar;
      tcl_GetDouble : function (interp:PTcl_Interp; src:PChar; doublePtr:Pdouble):cint;
      tcl_GetDoubleFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; doublePtr:Pdouble):cint;
      tcl_GetIndexFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; tablePtr:PPChar; msg:PChar; flags:cint;
                   indexPtr:pcint):cint;
      tcl_GetInt : function (interp:PTcl_Interp; src:PChar; intPtr:pcint):cint;
      tcl_GetIntFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; intPtr:pcint):cint;
      tcl_GetLongFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; longPtr:pclong):cint;
      tcl_GetObjType : function (typeName:PChar):PTcl_ObjType;
      tcl_GetStringFromObj : function (objPtr:PTcl_Obj; lengthPtr:pcint):PChar;
      tcl_InvalidateStringRep : procedure (objPtr:PTcl_Obj);
      tcl_ListObjAppendList : function (interp:PTcl_Interp; listPtr:PTcl_Obj; elemListPtr:PTcl_Obj):cint;
      tcl_ListObjAppendElement : function (interp:PTcl_Interp; listPtr:PTcl_Obj; objPtr:PTcl_Obj):cint;
      tcl_ListObjGetElements : function (interp:PTcl_Interp; listPtr:PTcl_Obj; objcPtr:pcint; objvPtr:PPPTcl_Obj):cint;
      tcl_ListObjIndex : function (interp:PTcl_Interp; listPtr:PTcl_Obj; index:cint; objPtrPtr:PPTcl_Obj):cint;
      tcl_ListObjLength : function (interp:PTcl_Interp; listPtr:PTcl_Obj; lengthPtr:pcint):cint;
      tcl_ListObjReplace : function (interp:PTcl_Interp; listPtr:PTcl_Obj; first:cint; count:cint; objc:cint; 
                   objv:array of PTcl_Obj):cint;
      tcl_NewBooleanObj : function (boolValue:cint):PTcl_Obj;
      tcl_NewByteArrayObj : function (bytes:pcuchar; length:cint):PTcl_Obj;
      tcl_NewDoubleObj : function (doubleValue:double):PTcl_Obj;
      tcl_NewIntObj : function (intValue:cint):PTcl_Obj;
      tcl_NewListObj : function (objc:cint; objv:array of PTcl_Obj):PTcl_Obj;
      tcl_NewLongObj : function (longValue:clong):PTcl_Obj;
      tcl_NewObj : function :PTcl_Obj;
      tcl_NewStringObj : function (bytes:PChar; length:cint):PTcl_Obj;
      tcl_SetBooleanObj : procedure (objPtr:PTcl_Obj; boolValue:cint);
      tcl_SetByteArrayLength : function (objPtr:PTcl_Obj; length:cint):pcuchar;
      tcl_SetByteArrayObj : procedure (objPtr:PTcl_Obj; bytes:pcuchar; length:cint);
      tcl_SetDoubleObj : procedure (objPtr:PTcl_Obj; doubleValue:double);
      tcl_SetIntObj : procedure (objPtr:PTcl_Obj; intValue:cint);
      tcl_SetListObj : procedure (objPtr:PTcl_Obj; objc:cint; objv:array of PTcl_Obj);
      tcl_SetLongObj : procedure (objPtr:PTcl_Obj; longValue:clong);
      tcl_SetObjLength : procedure (objPtr:PTcl_Obj; length:cint);
      tcl_SetStringObj : procedure (objPtr:PTcl_Obj; bytes:PChar; length:cint);
      tcl_AddErrorInfo : procedure (interp:PTcl_Interp; message:PChar);
      tcl_AddObjErrorInfo : procedure (interp:PTcl_Interp; message:PChar; length:cint);
      tcl_AllowExceptions : procedure (interp:PTcl_Interp);
      tcl_AppendElement : procedure (interp:PTcl_Interp; element:PChar);
      tcl_AppendResult : procedure (interp:PTcl_Interp; args:array of const);cdecl;
      tcl_AsyncCreate : function (proc:Tcl_AsyncProc; clientData:ClientData):PTcl_AsyncHandler;
      tcl_AsyncDelete : procedure (async:PTcl_AsyncHandler);
      tcl_AsyncInvoke : function (interp:PTcl_Interp; code:cint):cint;
      tcl_AsyncMark : procedure (async:PTcl_AsyncHandler);
      tcl_AsyncReady : function :cint;
      tcl_BackgroundError : procedure (interp:PTcl_Interp);
      tcl_Backslash : function (src:PChar; readPtr:pcint):cchar;
      tcl_BadChannelOption : function (interp:PTcl_Interp; optionName:PChar; optionList:PChar):cint;
      tcl_CallWhenDeleted : procedure (interp:PTcl_Interp; proc:Tcl_InterpDeleteProc; clientData:ClientData);
      tcl_CancelIdleCall : procedure (idleProc:Tcl_IdleProc; clientData:ClientData);
      tcl_Close : function (interp:PTcl_Interp; chan:PTcl_Channel):cint;
      tcl_CommandComplete : function (cmd:PChar):cint;
      tcl_Concat : function (argc:cint; argv:PPChar):PChar;
      tcl_ConvertElement : function (src:PChar; dst:PChar; flags:cint):cint;
      tcl_ConvertCountedElement : function (src:PChar; length:cint; dst:PChar; flags:cint):cint;
      tcl_CreateAlias : function (slave:PTcl_Interp; slaveCmd:PChar; target:PTcl_Interp; targetCmd:PChar; argc:cint;
                   argv:PPChar):cint;
      tcl_CreateAliasObj : function (slave:PTcl_Interp; slaveCmd:PChar; target:PTcl_Interp; targetCmd:PChar; objc:cint;
                   objv:array of PTcl_Obj):cint;
      tcl_CreateChannel : function (typePtr:PTcl_ChannelType; chanName:PChar; instanceData:ClientData; mask:cint):PTcl_Channel;
      tcl_CreateChannelHandler : procedure (chan:PTcl_Channel; mask:cint; proc:Tcl_ChannelProc; clientData:ClientData);
      tcl_CreateCloseHandler : procedure (chan:PTcl_Channel; proc:Tcl_CloseProc; clientData:ClientData);
      tcl_CreateCommand : function (interp:PTcl_Interp; cmdName:PChar; proc:Tcl_CmdProc; clientData:ClientData; deleteProc:Tcl_CmdDeleteProc):PTcl_Command;
      tcl_CreateEventSource : procedure (setupProc:Tcl_EventSetupProc; checkProc:Tcl_EventCheckProc; clientData:ClientData);
      tcl_CreateExitHandler : procedure (proc:Tcl_ExitProc; clientData:ClientData);
      tcl_CreateInterp : function :PTcl_Interp;
      tcl_CreateMathFunc : procedure (interp:PTcl_Interp; name:PChar; numArgs:cint; argTypes:PTcl_ValueType; proc:Tcl_MathProc;
                    clientData:ClientData);
      tcl_CreateObjCommand : function (interp:PTcl_Interp; cmdName:PChar; proc:Tcl_ObjCmdProc; clientData:ClientData; deleteProc:Tcl_CmdDeleteProc):PTcl_Command;
      tcl_CreateSlave : function (interp:PTcl_Interp; slaveName:PChar; isSafe:cint):PTcl_Interp;
      tcl_CreateTimerHandler : function (milliseconds:cint; proc:Tcl_TimerProc; clientData:ClientData):PTcl_TimerToken;
      tcl_CreateTrace : function (interp:PTcl_Interp; level:cint; proc:Tcl_CmdTraceProc; clientData:ClientData):PTcl_Trace;
      tcl_DeleteAssocData : procedure (interp:PTcl_Interp; name:PChar);
      tcl_DeleteChannelHandler : procedure (chan:PTcl_Channel; proc:Tcl_ChannelProc; clientData:ClientData);
      tcl_DeleteCloseHandler : procedure (chan:PTcl_Channel; proc:Tcl_CloseProc; clientData:ClientData);
      tcl_DeleteCommand : function (interp:PTcl_Interp; cmdName:PChar):cint;
      tcl_DeleteCommandFromToken : function (interp:PTcl_Interp; command:PTcl_Command):cint;
      tcl_DeleteEvents : procedure (proc:Tcl_EventDeleteProc; clientData:ClientData);
      tcl_DeleteEventSource : procedure (setupProc:Tcl_EventSetupProc; checkProc:Tcl_EventCheckProc; clientData:ClientData);
      tcl_DeleteExitHandler : procedure (proc:Tcl_ExitProc; clientData:ClientData);
      tcl_DeleteHashEntry : procedure (entryPtr:PTcl_HashEntry);
      tcl_DeleteHashTable : procedure (tablePtr:PTcl_HashTable);
      tcl_DeleteInterp : procedure (interp:PTcl_Interp);
      tcl_DetachPids : procedure (numPids:cint; pidPtr:PTcl_Pid);
      tcl_DeleteTimerHandler : procedure (token:PTcl_TimerToken);
      tcl_DeleteTrace : procedure (interp:PTcl_Interp; trace:PTcl_Trace);
      tcl_DontCallWhenDeleted : procedure (interp:PTcl_Interp; proc:Tcl_InterpDeleteProc; clientData:ClientData);
      tcl_DoOneEvent : function (flags:cint):cint;
      tcl_DoWhenIdle : procedure (proc:Tcl_IdleProc; clientData:ClientData);
      tcl_DStringAppend : function (dsPtr:PTcl_DString; bytes:PChar; length:cint):PChar;
      tcl_DStringAppendElement : function (dsPtr:PTcl_DString; element:PChar):PChar;
      tcl_DStringEndSublist : procedure (dsPtr:PTcl_DString);
      tcl_DStringFree : procedure (dsPtr:PTcl_DString);
      tcl_DStringGetResult : procedure (interp:PTcl_Interp; dsPtr:PTcl_DString);
      tcl_DStringInit : procedure (dsPtr:PTcl_DString);
      tcl_DStringResult : procedure (interp:PTcl_Interp; dsPtr:PTcl_DString);
      tcl_DStringSetLength : procedure (dsPtr:PTcl_DString; length:cint);
      tcl_DStringStartSublist : procedure (dsPtr:PTcl_DString);
      tcl_Eof : function (chan:PTcl_Channel):cint;
      tcl_ErrnoId : function :PChar;
      tcl_ErrnoMsg : function (err:cint):PChar;
      tcl_Eval : function (interp:PTcl_Interp; script:PChar):cint;
      tcl_EvalFile : function (interp:PTcl_Interp; fileName:PChar):cint;
      tcl_EvalObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj):cint;
      tcl_EventuallyFree : procedure (clientData:ClientData; freeProc:Tcl_FreeProc);
      tcl_Exit : procedure (status:cint);
      tcl_ExposeCommand : function (interp:PTcl_Interp; hiddenCmdToken:PChar; cmdName:PChar):cint;
      tcl_ExprBoolean : function (interp:PTcl_Interp; expr:PChar; ptr:pcint):cint;
      tcl_ExprBooleanObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; ptr:pcint):cint;
      tcl_ExprDouble : function (interp:PTcl_Interp; expr:PChar; ptr:Pdouble):cint;
      tcl_ExprDoubleObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; ptr:Pdouble):cint;
      tcl_ExprLong : function (interp:PTcl_Interp; expr:PChar; ptr:pclong):cint;
      tcl_ExprLongObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; ptr:pclong):cint;
      tcl_ExprObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; resultPtrPtr:PPTcl_Obj):cint;
      tcl_ExprString : function (interp:PTcl_Interp; expr:PChar):cint;
      tcl_Finalize : procedure ;
      tcl_FindExecutable : procedure (argv0:PChar);
      tcl_FirstHashEntry : function (tablePtr:PTcl_HashTable; searchPtr:PTcl_HashSearch):PTcl_HashEntry;
      tcl_Flush : function (chan:PTcl_Channel):cint;
      tcl_FreeResult : procedure (interp:PTcl_Interp);
      tcl_GetAlias : function (interp:PTcl_Interp; slaveCmd:PChar; targetInterpPtr:PPTcl_Interp; targetCmdPtr:PPChar; argcPtr:pcint;
                   argvPtr:PPPChar):cint;
      tcl_GetAliasObj : function (interp:PTcl_Interp; slaveCmd:PChar; targetInterpPtr:PPTcl_Interp; targetCmdPtr:PPChar; objcPtr:pcint;
                   objv:PPPTcl_Obj):cint;
      tcl_GetAssocData : function (interp:PTcl_Interp; name:PChar; procPtr:Tcl_InterpDeleteProc):ClientData;
      tcl_GetChannel : function (interp:PTcl_Interp; chanName:PChar; modePtr:pcint):PTcl_Channel;
      tcl_GetChannelBufferSize : function (chan:PTcl_Channel):cint;
      tcl_GetChannelHandle : function (chan:PTcl_Channel; direction:cint; handlePtr:PClientData):cint;
      tcl_GetChannelInstanceData : function (chan:PTcl_Channel):ClientData;
      tcl_GetChannelMode : function (chan:PTcl_Channel):cint;
      tcl_GetChannelName : function (chan:PTcl_Channel):PChar;
      tcl_GetChannelOption : function (interp:PTcl_Interp; chan:PTcl_Channel; optionName:PChar; dsPtr:PTcl_DString):cint;
      tcl_GetChannelType : function (chan:PTcl_Channel):PTcl_ChannelType;
      tcl_GetCommandInfo : function (interp:PTcl_Interp; cmdName:PChar; infoPtr:PTcl_CmdInfo):cint;
      tcl_GetCommandName : function (interp:PTcl_Interp; command:PTcl_Command):PChar;
      tcl_GetErrno : function :cint;
      tcl_GetHostName : function :PChar;
      tcl_GetInterpPath : function (askInterp:PTcl_Interp; slaveInterp:PTcl_Interp):cint;
      tcl_GetMaster : function (interp:PTcl_Interp):PTcl_Interp;
      tcl_GetNameOfExecutable : function :PChar;
      tcl_GetObjResult : function (interp:PTcl_Interp):PTcl_Obj;
      tcl_GetOpenFile : function (interp:PTcl_Interp; chanID:PChar; forWriting:cint; checkUsage:cint; filePtr:PClientData):cint;
      //Win32: reserved167 : pointer;
      //MacOSX: tcl_GetOpenFile : function (interp:PTcl_Interp; chanID:PChar; forWriting:cint; checkUsage:cint; filePtr:PClientData):cint;
      tcl_GetPathType : function (path:PChar):Tcl_PathType;
      tcl_Gets : function (chan:PTcl_Channel; dsPtr:PTcl_DString):cint;
      tcl_GetsObj : function (chan:PTcl_Channel; objPtr:PTcl_Obj):cint;
      tcl_GetServiceMode : function :cint;
      tcl_GetSlave : function (interp:PTcl_Interp; slaveName:PChar):PTcl_Interp;
      tcl_GetStdChannel : function (_type:cint):PTcl_Channel;
      tcl_GetStringResult : function (interp:PTcl_Interp):PChar;
      tcl_GetVar : function (interp:PTcl_Interp; varName:PChar; flags:cint):PChar;
      tcl_GetVar2 : function (interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint):PChar;
      tcl_GlobalEval : function (interp:PTcl_Interp; command:PChar):cint;
      tcl_GlobalEvalObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj):cint;
      tcl_HideCommand : function (interp:PTcl_Interp; cmdName:PChar; hiddenCmdToken:PChar):cint;
      tcl_Init : function (interp:PTcl_Interp):cint;
      tcl_InitHashTable : procedure (tablePtr:PTcl_HashTable; keyType:cint);
      tcl_InputBlocked : function (chan:PTcl_Channel):cint;
      tcl_InputBuffered : function (chan:PTcl_Channel):cint;
      tcl_InterpDeleted : function (interp:PTcl_Interp):cint;
      tcl_IsSafe : function (interp:PTcl_Interp):cint;
      tcl_JoinPath : function (argc:cint; argv:PPChar; resultPtr:PTcl_DString):PChar;
      tcl_LinkVar : function (interp:PTcl_Interp; varName:PChar; addr:PChar; _type:cint):cint;
      reserved188 : pointer;
      tcl_MakeFileChannel : function (handle:ClientData; mode:cint):PTcl_Channel;
      tcl_MakeSafe : function (interp:PTcl_Interp):cint;
      tcl_MakeTcpClientChannel : function (tcpSocket:ClientData):PTcl_Channel;
      tcl_Merge : function (argc:cint; argv:PPChar):PChar;
      tcl_NextHashEntry : function (searchPtr:PTcl_HashSearch):PTcl_HashEntry;
      tcl_NotifyChannel : procedure (channel:PTcl_Channel; mask:cint);
      tcl_ObjGetVar2 : function (interp:PTcl_Interp; part1Ptr:PTcl_Obj; part2Ptr:PTcl_Obj; flags:cint):PTcl_Obj;
      tcl_ObjSetVar2 : function (interp:PTcl_Interp; part1Ptr:PTcl_Obj; part2Ptr:PTcl_Obj; newValuePtr:PTcl_Obj; flags:cint):PTcl_Obj;
      tcl_OpenCommandChannel : function (interp:PTcl_Interp; argc:cint; argv:PPChar; flags:cint):PTcl_Channel;
      tcl_OpenFileChannel : function (interp:PTcl_Interp; fileName:PChar; modeString:PChar; permissions:cint):PTcl_Channel;
      tcl_OpenTcpClient : function (interp:PTcl_Interp; port:cint; address:PChar; myaddr:PChar; myport:cint;
                   async:cint):PTcl_Channel;
      tcl_OpenTcpServer : function (interp:PTcl_Interp; port:cint; host:PChar; acceptProc:Tcl_TcpAcceptProc; callbackData:ClientData):PTcl_Channel;
      tcl_Preserve : procedure (data:ClientData);
      tcl_PrintDouble : procedure (interp:PTcl_Interp; value:double; dst:PChar);
      tcl_PutEnv : function (assignment:PChar):cint;
      tcl_PosixError : function (interp:PTcl_Interp):PChar;
      tcl_QueueEvent : procedure (evPtr:PTcl_Event; position:Tcl_QueuePosition);
      tcl_Read : function (chan:PTcl_Channel; bufPtr:PChar; toRead:cint):cint;
      tcl_ReapDetachedProcs : procedure ;
      tcl_RecordAndEval : function (interp:PTcl_Interp; cmd:PChar; flags:cint):cint;
      tcl_RecordAndEvalObj : function (interp:PTcl_Interp; cmdPtr:PTcl_Obj; flags:cint):cint;
      tcl_RegisterChannel : procedure (interp:PTcl_Interp; chan:PTcl_Channel);
      tcl_RegisterObjType : procedure (typePtr:PTcl_ObjType);
      tcl_RegExpCompile : function (interp:PTcl_Interp; pattern:PChar):PTcl_RegExp;
      tcl_RegExpExec : function (interp:PTcl_Interp; regexp:PTcl_RegExp; text:PChar; start:PChar):cint;
      tcl_RegExpMatch : function (interp:PTcl_Interp; text:PChar; pattern:PChar):cint;
      tcl_RegExpRange : procedure (regexp:PTcl_RegExp; index:cint; startPtr:PPChar; endPtr:PPChar);
      tcl_Release : procedure (clientData:ClientData);
      tcl_ResetResult : procedure (interp:PTcl_Interp);
      tcl_ScanElement : function (str:PChar; flagPtr:pcint):cint;
      tcl_ScanCountedElement : function (str:PChar; length:cint; flagPtr:pcint):cint;
      tcl_SeekOld : function (chan:PTcl_Channel; offset:cint; mode:cint):cint;
      tcl_ServiceAll : function :cint;
      tcl_ServiceEvent : function (flags:cint):cint;
      tcl_SetAssocData : procedure (interp:PTcl_Interp; name:PChar; proc:Tcl_InterpDeleteProc; clientData:ClientData);
      tcl_SetChannelBufferSize : procedure (chan:PTcl_Channel; sz:cint);
      tcl_SetChannelOption : function (interp:PTcl_Interp; chan:PTcl_Channel; optionName:PChar; newValue:PChar):cint;
      tcl_SetCommandInfo : function (interp:PTcl_Interp; cmdName:PChar; infoPtr:PTcl_CmdInfo):cint;
      tcl_SetErrno : procedure (err:cint);
      tcl_SetErrorCode : procedure (interp:PTcl_Interp; args:array of const);cdecl;
      tcl_SetMaxBlockTime : procedure (timePtr:PTcl_Time);
      tcl_SetPanicProc : procedure (panicProc:Tcl_PanicProc);
      tcl_SetRecursionLimit : function (interp:PTcl_Interp; depth:cint):cint;
      tcl_SetResult : procedure (interp:PTcl_Interp; result:PChar; freeProc:Tcl_FreeProc);
      tcl_SetServiceMode : function (mode:cint):cint;
      tcl_SetObjErrorCode : procedure (interp:PTcl_Interp; errorObjPtr:PTcl_Obj);
      tcl_SetObjResult : procedure (interp:PTcl_Interp; resultObjPtr:PTcl_Obj);
      tcl_SetStdChannel : procedure (channel:PTcl_Channel; _type:cint);
      tcl_SetVar : function (interp:PTcl_Interp; varName:PChar; newValue:PChar; flags:cint):PChar;
      tcl_SetVar2 : function (interp:PTcl_Interp; part1:PChar; part2:PChar; newValue:PChar; flags:cint):PChar;
      tcl_SignalId : function (sig:cint):PChar;
      tcl_SignalMsg : function (sig:cint):PChar;
      tcl_SourceRCFile : procedure (interp:PTcl_Interp);
      tcl_SplitList : function (interp:PTcl_Interp; listStr:PChar; argcPtr:pcint; argvPtr:PPPChar):cint;
      tcl_SplitPath : procedure (path:PChar; argcPtr:pcint; argvPtr:PPPChar);
      tcl_StaticPackage : procedure (interp:PTcl_Interp; pkgName:PChar; initProc:Tcl_PackageInitProc; safeInitProc:Tcl_PackageInitProc);
      tcl_StringMatch : function (str:PChar; pattern:PChar):cint;
      tcl_TellOld : function (chan:PTcl_Channel):cint;
      tcl_TraceVar : function (interp:PTcl_Interp; varName:PChar; flags:cint; proc:Tcl_VarTraceProc; clientData:ClientData):cint;
      tcl_TraceVar2 : function (interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint; proc:Tcl_VarTraceProc;
                   clientData:ClientData):cint;
      tcl_TranslateFileName : function (interp:PTcl_Interp; name:PChar; bufferPtr:PTcl_DString):PChar;
      tcl_Ungets : function (chan:PTcl_Channel; str:PChar; len:cint; atHead:cint):cint;
      tcl_UnlinkVar : procedure (interp:PTcl_Interp; varName:PChar);
      tcl_UnregisterChannel : function (interp:PTcl_Interp; chan:PTcl_Channel):cint;
      tcl_UnsetVar : function (interp:PTcl_Interp; varName:PChar; flags:cint):cint;
      tcl_UnsetVar2 : function (interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint):cint;
      tcl_UntraceVar : procedure (interp:PTcl_Interp; varName:PChar; flags:cint; proc:Tcl_VarTraceProc; clientData:ClientData);
      tcl_UntraceVar2 : procedure (interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint; proc:Tcl_VarTraceProc;
                    clientData:ClientData);
      tcl_UpdateLinkedVar : procedure (interp:PTcl_Interp; varName:PChar);
      tcl_UpVar : function (interp:PTcl_Interp; frameName:PChar; varName:PChar; localName:PChar; flags:cint):cint;
      tcl_UpVar2 : function (interp:PTcl_Interp; frameName:PChar; part1:PChar; part2:PChar; localName:PChar;
                   flags:cint):cint;
      tcl_VarEval : function (interp:PTcl_Interp; args:array of const):cint;cdecl;
      tcl_VarTraceInfo : function (interp:PTcl_Interp; varName:PChar; flags:cint; procPtr:Tcl_VarTraceProc; prevClientData:ClientData):ClientData;
      tcl_VarTraceInfo2 : function (interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint; procPtr:Tcl_VarTraceProc;
                   prevClientData:ClientData):ClientData;
      tcl_Write : function (chan:PTcl_Channel; s:PChar; slen:cint):cint;
      tcl_WrongNumArgs : procedure (interp:PTcl_Interp; objc:cint; objv:array of PTcl_Obj; message:PChar);
      tcl_DumpActiveMemory : function (fileName:PChar):cint;
      tcl_ValidateAllMemory : procedure (_file:PChar; line:cint);
      tcl_AppendResultVA : procedure (interp:PTcl_Interp; argList:Pointer{va_list});
      tcl_AppendStringsToObjVA : procedure (objPtr:PTcl_Obj; argList:Pointer{va_list});
      tcl_HashStats : function (tablePtr:PTcl_HashTable):PChar;
      tcl_ParseVar : function (interp:PTcl_Interp; start:PChar; termPtr:PPChar):PChar;
      tcl_PkgPresent : function (interp:PTcl_Interp; name:PChar; version:PChar; exact:cint):PChar;
      tcl_PkgPresentEx : function (interp:PTcl_Interp; name:PChar; version:PChar; exact:cint; clientDataPtr:PClientData):PChar;
      tcl_PkgProvide : function (interp:PTcl_Interp; name:PChar; version:PChar):cint;
      tcl_PkgRequire : function (interp:PTcl_Interp; name:PChar; version:PChar; exact:cint):PChar;
      tcl_SetErrorCodeVA : procedure (interp:PTcl_Interp; argList:Pointer{va_list});
      tcl_VarEvalVA : function (interp:PTcl_Interp; argList:Pointer{va_list}):cint;
      tcl_WaitPid : function (pid:PTcl_Pid; statPtr:pcint; options:cint):PTcl_Pid;
      tcl_PanicVA : procedure (format:PChar; argList:Pointer{va_list});
      tcl_GetVersion : procedure (major:pcint; minor:pcint; patchLevel:pcint; _type:pcint);
      tcl_InitMemory : procedure (interp:PTcl_Interp);
      tcl_StackChannel : function (interp:PTcl_Interp; typePtr:PTcl_ChannelType; instanceData:ClientData; mask:cint; prevChan:PTcl_Channel):PTcl_Channel;
      tcl_UnstackChannel : function (interp:PTcl_Interp; chan:PTcl_Channel):cint;
      tcl_GetStackedChannel : function (chan:PTcl_Channel):PTcl_Channel;
      tcl_SetMainLoop : procedure (proc:Tcl_MainLoopProc);
      reserved285 : pointer;
      tcl_AppendObjToObj : procedure (objPtr:PTcl_Obj; appendObjPtr:PTcl_Obj);
      tcl_CreateEncoding : function (typePtr:PTcl_EncodingType):PTcl_Encoding;
      tcl_CreateThreadExitHandler : procedure (proc:Tcl_ExitProc; clientData:ClientData);
      tcl_DeleteThreadExitHandler : procedure (proc:Tcl_ExitProc; clientData:ClientData);
      tcl_DiscardResult : procedure (statePtr:PTcl_SavedResult);
      tcl_EvalEx : function (interp:PTcl_Interp; script:PChar; numBytes:cint; flags:cint):cint;
      tcl_EvalObjv : function (interp:PTcl_Interp; objc:cint; objv:array of PTcl_Obj; flags:cint):cint;
      tcl_EvalObjEx : function (interp:PTcl_Interp; objPtr:PTcl_Obj; flags:cint):cint;
      tcl_ExitThread : procedure (status:cint);
      tcl_ExternalToUtf : function (interp:PTcl_Interp; encoding:PTcl_Encoding; src:PChar; srcLen:cint; flags:cint;
                   statePtr:PTcl_EncodingState; dst:PChar; dstLen:cint; srcReadPtr:pcint; dstWrotePtr:pcint;
                   dstCharsPtr:pcint):cint;
      tcl_ExternalToUtfDString : function (encoding:PTcl_Encoding; src:PChar; srcLen:cint; dsPtr:PTcl_DString):PChar;
      tcl_FinalizeThread : procedure ;
      tcl_FinalizeNotifier : procedure (clientData:ClientData);
      tcl_FreeEncoding : procedure (encoding:PTcl_Encoding);
      tcl_GetCurrentThread : function :PTcl_ThreadId;
      tcl_GetEncoding : function (interp:PTcl_Interp; name:PChar):PTcl_Encoding;
      tcl_GetEncodingName : function (encoding:PTcl_Encoding):PChar;
      tcl_GetEncodingNames : procedure (interp:PTcl_Interp);
      tcl_GetIndexFromObjStruct : function (interp:PTcl_Interp; objPtr:PTcl_Obj; tablePtr:pointer; offset:cint; msg:PChar;
                   flags:cint; indexPtr:pcint):cint;
      tcl_GetThreadData : function (keyPtr:PTcl_ThreadDataKey; size:cint):pointer;
      tcl_GetVar2Ex : function (interp:PTcl_Interp; part1:PChar; part2:PChar; flags:cint):PTcl_Obj;
      tcl_InitNotifier : function :ClientData;
      tcl_MutexLock : procedure (mutexPtr:PTcl_Mutex);
      tcl_MutexUnlock : procedure (mutexPtr:PTcl_Mutex);
      tcl_ConditionNotify : procedure (condPtr:PTcl_Condition);
      tcl_ConditionWait : procedure (condPtr:PTcl_Condition; mutexPtr:PTcl_Mutex; timePtr:PTcl_Time);
      tcl_NumUtfChars : function (src:PChar; length:cint):cint;
      tcl_ReadChars : function (channel:PTcl_Channel; objPtr:PTcl_Obj; charsToRead:cint; appendFlag:cint):cint;
      tcl_RestoreResult : procedure (interp:PTcl_Interp; statePtr:PTcl_SavedResult);
      tcl_SaveResult : procedure (interp:PTcl_Interp; statePtr:PTcl_SavedResult);
      tcl_SetSystemEncoding : function (interp:PTcl_Interp; name:PChar):cint;
      tcl_SetVar2Ex : function (interp:PTcl_Interp; part1:PChar; part2:PChar; newValuePtr:PTcl_Obj; flags:cint):PTcl_Obj;
      tcl_ThreadAlert : procedure (threadId:PTcl_ThreadId);
      tcl_ThreadQueueEvent : procedure (threadId:PTcl_ThreadId; evPtr:PTcl_Event; position:Tcl_QueuePosition);
      tcl_UniCharAtIndex : function (src:PChar; index:cint):Tcl_UniChar;
      tcl_UniCharToLower : function (ch:cint):Tcl_UniChar;
      tcl_UniCharToTitle : function (ch:cint):Tcl_UniChar;
      tcl_UniCharToUpper : function (ch:cint):Tcl_UniChar;
      tcl_UniCharToUtf : function (ch:cint; buf:PChar):cint;
      tcl_UtfAtIndex : function (src:PChar; index:cint):PChar;
      tcl_UtfCharComplete : function (src:PChar; length:cint):cint;
      tcl_UtfBackslash : function (src:PChar; readPtr:pcint; dst:PChar):cint;
      tcl_UtfFindFirst : function (src:PChar; ch:cint):PChar;
      tcl_UtfFindLast : function (src:PChar; ch:cint):PChar;
      tcl_UtfNext : function (src:PChar):PChar;
      tcl_UtfPrev : function (src:PChar; start:PChar):PChar;
      tcl_UtfToExternal : function (interp:PTcl_Interp; encoding:PTcl_Encoding; src:PChar; srcLen:cint; flags:cint;
                   statePtr:PTcl_EncodingState; dst:PChar; dstLen:cint; srcReadPtr:pcint; dstWrotePtr:pcint;
                   dstCharsPtr:pcint):cint;
      tcl_UtfToExternalDString : function (encoding:PTcl_Encoding; src:PChar; srcLen:cint; dsPtr:PTcl_DString):PChar;
      tcl_UtfToLower : function (src:PChar):cint;
      tcl_UtfToTitle : function (src:PChar):cint;
      tcl_UtfToUniChar : function (src:PChar; chPtr:PTcl_UniChar):cint;
      tcl_UtfToUpper : function (src:PChar):cint;
      tcl_WriteChars : function (chan:PTcl_Channel; src:PChar; srcLen:cint):cint;
      tcl_WriteObj : function (chan:PTcl_Channel; objPtr:PTcl_Obj):cint;
      tcl_GetString : function (objPtr:PTcl_Obj):PChar;
      tcl_GetDefaultEncodingDir : function :PChar;
      tcl_SetDefaultEncodingDir : procedure (path:PChar);
      tcl_AlertNotifier : procedure (clientData:ClientData);
      tcl_ServiceModeHook : procedure (mode:cint);
      tcl_UniCharIsAlnum : function (ch:cint):cint;
      tcl_UniCharIsAlpha : function (ch:cint):cint;
      tcl_UniCharIsDigit : function (ch:cint):cint;
      tcl_UniCharIsLower : function (ch:cint):cint;
      tcl_UniCharIsSpace : function (ch:cint):cint;
      tcl_UniCharIsUpper : function (ch:cint):cint;
      tcl_UniCharIsWordChar : function (ch:cint):cint;
      tcl_UniCharLen : function (uniStr:PTcl_UniChar):cint;
      tcl_UniCharNcmp : function (ucs:PTcl_UniChar; uct:PTcl_UniChar; numChars:culong):cint;
      tcl_UniCharToUtfDString : function (uniStr:PTcl_UniChar; uniLength:cint; dsPtr:PTcl_DString):PChar;
      tcl_UtfToUniCharDString : function (src:PChar; length:cint; dsPtr:PTcl_DString):PTcl_UniChar;
      tcl_GetRegExpFromObj : function (interp:PTcl_Interp; patObj:PTcl_Obj; flags:cint):PTcl_RegExp;
      tcl_EvalTokens : function (interp:PTcl_Interp; tokenPtr:PTcl_Token; count:cint):PTcl_Obj;
      tcl_FreeParse : procedure (parsePtr:PTcl_Parse);
      tcl_LogCommandInfo : procedure (interp:PTcl_Interp; script:PChar; command:PChar; length:cint);
      tcl_ParseBraces : function (interp:PTcl_Interp; start:PChar; numBytes:cint; parsePtr:PTcl_Parse; append:cint;
                   termPtr:PPChar):cint;
      tcl_ParseCommand : function (interp:PTcl_Interp; start:PChar; numBytes:cint; nested:cint; parsePtr:PTcl_Parse):cint;
      tcl_ParseExpr : function (interp:PTcl_Interp; start:PChar; numBytes:cint; parsePtr:PTcl_Parse):cint;
      tcl_ParseQuotedString : function (interp:PTcl_Interp; start:PChar; numBytes:cint; parsePtr:PTcl_Parse; append:cint;
                   termPtr:PPChar):cint;
      tcl_ParseVarName : function (interp:PTcl_Interp; start:PChar; numBytes:cint; parsePtr:PTcl_Parse; append:cint):cint;
      tcl_GetCwd : function (interp:PTcl_Interp; cwdPtr:PTcl_DString):PChar;
      tcl_Chdir : function (dirName:PChar):cint;
      tcl_Access : function (path:PChar; mode:cint):cint;
      tcl_Stat : function (path:PChar; bufPtr:Pstat):cint;
      tcl_UtfNcmp : function (s1:PChar; s2:PChar; n:culong):cint;
      tcl_UtfNcasecmp : function (s1:PChar; s2:PChar; n:culong):cint;
      tcl_StringCaseMatch : function (str:PChar; pattern:PChar; nocase:cint):cint;
      tcl_UniCharIsControl : function (ch:cint):cint;
      tcl_UniCharIsGraph : function (ch:cint):cint;
      tcl_UniCharIsPrint : function (ch:cint):cint;
      tcl_UniCharIsPunct : function (ch:cint):cint;
      tcl_RegExpExecObj : function (interp:PTcl_Interp; regexp:PTcl_RegExp; textObj:PTcl_Obj; offset:cint; nmatches:cint;
                   flags:cint):cint;
      tcl_RegExpGetInfo : procedure (regexp:PTcl_RegExp; infoPtr:PTcl_RegExpInfo);
      tcl_NewUnicodeObj : function (unicode:PTcl_UniChar; numChars:cint):PTcl_Obj;
      tcl_SetUnicodeObj : procedure (objPtr:PTcl_Obj; unicode:PTcl_UniChar; numChars:cint);
      tcl_GetCharLength : function (objPtr:PTcl_Obj):cint;
      tcl_GetUniChar : function (objPtr:PTcl_Obj; index:cint):Tcl_UniChar;
      tcl_GetUnicode : function (objPtr:PTcl_Obj):PTcl_UniChar;
      tcl_GetRange : function (objPtr:PTcl_Obj; first:cint; last:cint):PTcl_Obj;
      tcl_AppendUnicodeToObj : procedure (objPtr:PTcl_Obj; unicode:PTcl_UniChar; length:cint);
      tcl_RegExpMatchObj : function (interp:PTcl_Interp; textObj:PTcl_Obj; patternObj:PTcl_Obj):cint;
      tcl_SetNotifier : procedure (notifierProcPtr:Tcl_NotifierProcs);
      tcl_GetAllocMutex : function :PTcl_Mutex;
      tcl_GetChannelNames : function (interp:PTcl_Interp):cint;
      tcl_GetChannelNamesEx : function (interp:PTcl_Interp; pattern:PChar):cint;
      tcl_ProcObjCmd : function (clientData:ClientData; interp:PTcl_Interp; objc:cint; objv:array of PTcl_Obj):cint;
      tcl_ConditionFinalize : procedure (condPtr:PTcl_Condition);
      tcl_MutexFinalize : procedure (mutex:PTcl_Mutex);
      tcl_CreateThread : function (idPtr:PTcl_ThreadId; proc:Tcl_ThreadCreateProc; clientData:ClientData; stackSize:cint; flags:cint):cint;
      tcl_ReadRaw : function (chan:PTcl_Channel; dst:PChar; bytesToRead:cint):cint;
      tcl_WriteRaw : function (chan:PTcl_Channel; src:PChar; srcLen:cint):cint;
      tcl_GetTopChannel : function (chan:PTcl_Channel):PTcl_Channel;
      tcl_ChannelBuffered : function (chan:PTcl_Channel):cint;
      tcl_ChannelName : function (chanTypePtr:PTcl_ChannelType):PChar;
      tcl_ChannelVersion : function (chanTypePtr:PTcl_ChannelType):PTcl_ChannelTypeVersion;
      tcl_ChannelBlockModeProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverBlockModeProc;
      tcl_ChannelCloseProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverCloseProc;
      tcl_ChannelClose2Proc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverClose2Proc;
      tcl_ChannelInputProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverInputProc;
      tcl_ChannelOutputProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverOutputProc;
      tcl_ChannelSeekProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverSeekProc;
      tcl_ChannelSetOptionProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverSetOptionProc;
      tcl_ChannelGetOptionProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverGetOptionProc;
      tcl_ChannelWatchProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverWatchProc;
      tcl_ChannelGetHandleProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverGetHandleProc;
      tcl_ChannelFlushProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverFlushProc;
      tcl_ChannelHandlerProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverHandlerProc;
      tcl_JoinThread : function (threadId:PTcl_ThreadId; result:pcint):cint;
      tcl_IsChannelShared : function (channel:PTcl_Channel):cint;
      tcl_IsChannelRegistered : function (interp:PTcl_Interp; channel:PTcl_Channel):cint;
      tcl_CutChannel : procedure (channel:PTcl_Channel);
      tcl_SpliceChannel : procedure (channel:PTcl_Channel);
      tcl_ClearChannelHandlers : procedure (channel:PTcl_Channel);
      tcl_IsChannelExisting : function (channelName:PChar):cint;
      tcl_UniCharNcasecmp : function (ucs:PTcl_UniChar; uct:PTcl_UniChar; numChars:culong):cint;
      tcl_UniCharCaseMatch : function (uniStr:PTcl_UniChar; uniPattern:PTcl_UniChar; nocase:cint):cint;
      tcl_FindHashEntry : function (tablePtr:PTcl_HashTable; key:PChar):PTcl_HashEntry;
      tcl_CreateHashEntry : function (tablePtr:PTcl_HashTable; key:PChar; newPtr:pcint):PTcl_HashEntry;
      tcl_InitCustomHashTable : procedure (tablePtr:PTcl_HashTable; keyType:cint; typePtr:PTcl_HashKeyType);
      tcl_InitObjHashTable : procedure (tablePtr:PTcl_HashTable);
      tcl_CommandTraceInfo : function (interp:PTcl_Interp; varName:PChar; flags:cint; procPtr:PTcl_CommandTraceProc; prevClientData:ClientData):ClientData;
      tcl_TraceCommand : function (interp:PTcl_Interp; varName:PChar; flags:cint; proc:PTcl_CommandTraceProc; clientData:ClientData):cint;
      tcl_UntraceCommand : procedure (interp:PTcl_Interp; varName:PChar; flags:cint; proc:PTcl_CommandTraceProc; clientData:ClientData);
      tcl_AttemptAlloc : function (size:cuint):PChar;
      tcl_AttemptDbCkalloc : function (size:cuint; _file:PChar; line:cint):PChar;
      tcl_AttemptRealloc : function (ptr:PChar; size:cuint):PChar;
      tcl_AttemptDbCkrealloc : function (ptr:PChar; size:cuint; _file:PChar; line:cint):PChar;
      tcl_AttemptSetObjLength : function (objPtr:PTcl_Obj; length:cint):cint;
      tcl_GetChannelThread : function (channel:PTcl_Channel):PTcl_ThreadId;
      tcl_GetUnicodeFromObj : function (objPtr:PTcl_Obj; lengthPtr:pcint):PTcl_UniChar;
      tcl_GetMathFuncInfo : function (interp:PTcl_Interp; name:PChar; numArgsPtr:pcint; argTypesPtr:PPTcl_ValueType; procPtr:Tcl_MathProc;
                   clientDataPtr:PClientData):cint;
      tcl_ListMathFuncs : function (interp:PTcl_Interp; pattern:PChar):PTcl_Obj;
      tcl_SubstObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; flags:cint):PTcl_Obj;
      tcl_DetachChannel : function (interp:PTcl_Interp; channel:PTcl_Channel):cint;
      tcl_IsStandardChannel : function (channel:PTcl_Channel):cint;
      tcl_FSCopyFile : function (srcPathPtr:PTcl_Obj; destPathPtr:PTcl_Obj):cint;
      tcl_FSCopyDirectory : function (srcPathPtr:PTcl_Obj; destPathPtr:PTcl_Obj; errorPtr:PPTcl_Obj):cint;
      tcl_FSCreateDirectory : function (pathPtr:PTcl_Obj):cint;
      tcl_FSDeleteFile : function (pathPtr:PTcl_Obj):cint;
      tcl_FSLoadFile : function (interp:PTcl_Interp; pathPtr:PTcl_Obj; sym1:PChar; sym2:PChar; proc1Ptr:Tcl_PackageInitProc;
                   proc2Ptr:Tcl_PackageInitProc; handlePtr:PTcl_LoadHandle; unloadProcPtr:Tcl_FSUnloadFileProc):cint;
      tcl_FSMatchInDirectory : function (interp:PTcl_Interp; result:PTcl_Obj; pathPtr:PTcl_Obj; pattern:PChar; types:PTcl_GlobTypeData):cint;
      tcl_FSLink : function (pathPtr:PTcl_Obj; toPtr:PTcl_Obj; linkAction:cint):PTcl_Obj;
      tcl_FSRemoveDirectory : function (pathPtr:PTcl_Obj; recursive:cint; errorPtr:PPTcl_Obj):cint;
      tcl_FSRenameFile : function (srcPathPtr:PTcl_Obj; destPathPtr:PTcl_Obj):cint;
      tcl_FSLstat : function (pathPtr:PTcl_Obj; buf:PTcl_StatBuf):cint;
      tcl_FSUtime : function (pathPtr:PTcl_Obj; tval:Putimbuf):cint;
      tcl_FSFileAttrsGet : function (interp:PTcl_Interp; index:cint; pathPtr:PTcl_Obj; objPtrRef:PPTcl_Obj):cint;
      tcl_FSFileAttrsSet : function (interp:PTcl_Interp; index:cint; pathPtr:PTcl_Obj; objPtr:PTcl_Obj):cint;
      tcl_FSFileAttrStrings : function (pathPtr:PTcl_Obj; objPtrRef:PPTcl_Obj):pPChar;
      tcl_FSStat : function (pathPtr:PTcl_Obj; buf:PTcl_StatBuf):cint;
      tcl_FSAccess : function (pathPtr:PTcl_Obj; mode:cint):cint;
      tcl_FSOpenFileChannel : function (interp:PTcl_Interp; pathPtr:PTcl_Obj; modeString:PChar; permissions:cint):PTcl_Channel;
      tcl_FSGetCwd : function (interp:PTcl_Interp):PTcl_Obj;
      tcl_FSChdir : function (pathPtr:PTcl_Obj):cint;
      tcl_FSConvertToPathType : function (interp:PTcl_Interp; pathPtr:PTcl_Obj):cint;
      tcl_FSJoinPath : function (listObj:PTcl_Obj; elements:cint):PTcl_Obj;
      tcl_FSSplitPath : function (pathPtr:PTcl_Obj; lenPtr:pcint):PTcl_Obj;
      tcl_FSEqualPaths : function (firstPtr:PTcl_Obj; secondPtr:PTcl_Obj):cint;
      tcl_FSGetNormalizedPath : function (interp:PTcl_Interp; pathPtr:PTcl_Obj):PTcl_Obj;
      tcl_FSJoinToPath : function (pathPtr:PTcl_Obj; objc:cint; objv:array of PTcl_Obj):PTcl_Obj;
      tcl_FSGetInternalRep : function (pathPtr:PTcl_Obj; fsPtr:PTcl_Filesystem):ClientData;
      tcl_FSGetTranslatedPath : function (interp:PTcl_Interp; pathPtr:PTcl_Obj):PTcl_Obj;
      tcl_FSEvalFile : function (interp:PTcl_Interp; fileName:PTcl_Obj):cint;
      tcl_FSNewNativePath : function (fromFilesystem:PTcl_Filesystem; clientData:ClientData):PTcl_Obj;
      tcl_FSGetNativePath : function (pathPtr:PTcl_Obj):PChar;
      tcl_FSFileSystemInfo : function (pathPtr:PTcl_Obj):PTcl_Obj;
      tcl_FSPathSeparator : function (pathPtr:PTcl_Obj):PTcl_Obj;
      tcl_FSListVolumes : function :PTcl_Obj;
      tcl_FSRegister : function (clientData:ClientData; fsPtr:PTcl_Filesystem):cint;
      tcl_FSUnregister : function (fsPtr:PTcl_Filesystem):cint;
      tcl_FSData : function (fsPtr:PTcl_Filesystem):ClientData;
      tcl_FSGetTranslatedStringPath : function (interp:PTcl_Interp; pathPtr:PTcl_Obj):PChar;
      tcl_FSGetFileSystemForPath : function (pathPtr:PTcl_Obj):PTcl_Filesystem;
      tcl_FSGetPathType : function (pathPtr:PTcl_Obj):Tcl_PathType;
      tcl_OutputBuffered : function (chan:PTcl_Channel):cint;
      tcl_FSMountsChanged : procedure (fsPtr:PTcl_Filesystem);
      tcl_EvalTokensStandard : function (interp:PTcl_Interp; tokenPtr:PTcl_Token; count:cint):cint;
      tcl_GetTime : procedure (timeBuf:PTcl_Time);
      tcl_CreateObjTrace : function (interp:PTcl_Interp; level:cint; flags:cint; objProc:Tcl_CmdObjTraceProc; clientData:ClientData; 
                   delProc:Tcl_CmdObjTraceDeleteProc):PTcl_Trace;
      tcl_GetCommandInfoFromToken : function (token:PTcl_Command; infoPtr:PTcl_CmdInfo):cint;
      tcl_SetCommandInfoFromToken : function (token:PTcl_Command; infoPtr:PTcl_CmdInfo):cint;
      tcl_DbNewWideIntObj : function (wideValue:Tcl_WideInt; _file:PChar; line:cint):PTcl_Obj;
      tcl_GetWideIntFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; widePtr:PTcl_WideInt):cint;
      tcl_NewWideIntObj : function (wideValue:Tcl_WideInt):PTcl_Obj;
      tcl_SetWideIntObj : procedure (objPtr:PTcl_Obj; wideValue:Tcl_WideInt);
      tcl_AllocStatBuf : function :PTcl_StatBuf;
      tcl_Seek : function (chan:PTcl_Channel; offset:Tcl_WideInt; mode:cint):Tcl_WideInt;
      tcl_Tell : function (chan:PTcl_Channel):Tcl_WideInt;
      tcl_ChannelWideSeekProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverWideSeekProc;
      tcl_DictObjPut : function (interp:PTcl_Interp; dictPtr:PTcl_Obj; keyPtr:PTcl_Obj; valuePtr:PTcl_Obj):cint;
      tcl_DictObjGet : function (interp:PTcl_Interp; dictPtr:PTcl_Obj; keyPtr:PTcl_Obj; valuePtrPtr:PPTcl_Obj):cint;
      tcl_DictObjRemove : function (interp:PTcl_Interp; dictPtr:PTcl_Obj; keyPtr:PTcl_Obj):cint;
      tcl_DictObjSize : function (interp:PTcl_Interp; dictPtr:PTcl_Obj; sizePtr:pcint):cint;
      tcl_DictObjFirst : function (interp:PTcl_Interp; dictPtr:PTcl_Obj; searchPtr:PTcl_DictSearch; keyPtrPtr:PPTcl_Obj; valuePtrPtr:PPTcl_Obj; 
                   donePtr:pcint):cint;
      tcl_DictObjNext : procedure (searchPtr:PTcl_DictSearch; keyPtrPtr:PPTcl_Obj; valuePtrPtr:PPTcl_Obj; donePtr:pcint);
      tcl_DictObjDone : procedure (searchPtr:PTcl_DictSearch);
      tcl_DictObjPutKeyList : function (interp:PTcl_Interp; dictPtr:PTcl_Obj; keyc:cint; keyv:PPTcl_Obj; valuePtr:PTcl_Obj):cint;
      tcl_DictObjRemoveKeyList : function (interp:PTcl_Interp; dictPtr:PTcl_Obj; keyc:cint; keyv:PPTcl_Obj):cint;
      tcl_NewDictObj : function :PTcl_Obj;
      tcl_DbNewDictObj : function (_file:PChar; line:cint):PTcl_Obj;
      tcl_RegisterConfig : procedure (interp:PTcl_Interp; pkgName:PChar; configuration:PTcl_Config; valEncoding:PChar);
      tcl_CreateNamespace : function (interp:PTcl_Interp; name:PChar; clientData:ClientData; deleteProc:Tcl_NamespaceDeleteProc):PTcl_Namespace;
      tcl_DeleteNamespace : procedure (nsPtr:PTcl_Namespace);
      tcl_AppendExportList : function (interp:PTcl_Interp; nsPtr:PTcl_Namespace; objPtr:PTcl_Obj):cint;
      tcl_Export : function (interp:PTcl_Interp; nsPtr:PTcl_Namespace; pattern:PChar; resetListFirst:cint):cint;
      tcl_Import : function (interp:PTcl_Interp; nsPtr:PTcl_Namespace; pattern:PChar; allowOverwrite:cint):cint;
      tcl_ForgetImport : function (interp:PTcl_Interp; nsPtr:PTcl_Namespace; pattern:PChar):cint;
      tcl_GetCurrentNamespace : function (interp:PTcl_Interp):PTcl_Namespace;
      tcl_GetGlobalNamespace : function (interp:PTcl_Interp):PTcl_Namespace;
      tcl_FindNamespace : function (interp:PTcl_Interp; name:PChar; contextNsPtr:PTcl_Namespace; flags:cint):PTcl_Namespace;
      tcl_FindCommand : function (interp:PTcl_Interp; name:PChar; contextNsPtr:PTcl_Namespace; flags:cint):PTcl_Command;
      tcl_GetCommandFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj):PTcl_Command;
      tcl_GetCommandFullName : procedure (interp:PTcl_Interp; command:PTcl_Command; objPtr:PTcl_Obj);
      tcl_FSEvalFileEx : function (interp:PTcl_Interp; fileName:PTcl_Obj; encodingName:PChar):cint;
      tcl_SetExitProc : function (proc:Tcl_ExitProc):Tcl_ExitProc;
      tcl_LimitAddHandler : procedure (interp:PTcl_Interp; _type:cint; handlerProc:Tcl_LimitHandlerProc; clientData:ClientData; deleteProc:Tcl_LimitHandlerDeleteProc);
      tcl_LimitRemoveHandler : procedure (interp:PTcl_Interp; _type:cint; handlerProc:Tcl_LimitHandlerProc; clientData:ClientData);
      tcl_LimitReady : function (interp:PTcl_Interp):cint;
      tcl_LimitCheck : function (interp:PTcl_Interp):cint;
      tcl_LimitExceeded : function (interp:PTcl_Interp):cint;
      tcl_LimitSetCommands : procedure (interp:PTcl_Interp; commandLimit:cint);
      tcl_LimitSetTime : procedure (interp:PTcl_Interp; timeLimitPtr:PTcl_Time);
      tcl_LimitSetGranularity : procedure (interp:PTcl_Interp; _type:cint; granularity:cint);
      tcl_LimitTypeEnabled : function (interp:PTcl_Interp; _type:cint):cint;
      tcl_LimitTypeExceeded : function (interp:PTcl_Interp; _type:cint):cint;
      tcl_LimitTypeSet : procedure (interp:PTcl_Interp; _type:cint);
      tcl_LimitTypeReset : procedure (interp:PTcl_Interp; _type:cint);
      tcl_LimitGetCommands : function (interp:PTcl_Interp):cint;
      tcl_LimitGetTime : procedure (interp:PTcl_Interp; timeLimitPtr:PTcl_Time);
      tcl_LimitGetGranularity : function (interp:PTcl_Interp; _type:cint):cint;
      tcl_SaveInterpState : function (interp:PTcl_Interp; status:cint):PTcl_InterpState;
      tcl_RestoreInterpState : function (interp:PTcl_Interp; state:PTcl_InterpState):cint;
      tcl_DiscardInterpState : procedure (state:PTcl_InterpState);
      tcl_SetReturnOptions : function (interp:PTcl_Interp; options:PTcl_Obj):cint;
      tcl_GetReturnOptions : function (interp:PTcl_Interp; result:cint):PTcl_Obj;
      tcl_IsEnsemble : function (token:PTcl_Command):cint;
      tcl_CreateEnsemble : function (interp:PTcl_Interp; name:PChar; namespacePtr:PTcl_Namespace; flags:cint):PTcl_Command;
      tcl_FindEnsemble : function (interp:PTcl_Interp; cmdNameObj:PTcl_Obj; flags:cint):PTcl_Command;
      tcl_SetEnsembleSubcommandList : function (interp:PTcl_Interp; token:PTcl_Command; subcmdList:PTcl_Obj):cint;
      tcl_SetEnsembleMappingDict : function (interp:PTcl_Interp; token:PTcl_Command; mapDict:PTcl_Obj):cint;
      tcl_SetEnsembleUnknownHandler : function (interp:PTcl_Interp; token:PTcl_Command; unknownList:PTcl_Obj):cint;
      tcl_SetEnsembleFlags : function (interp:PTcl_Interp; token:PTcl_Command; flags:cint):cint;
      tcl_GetEnsembleSubcommandList : function (interp:PTcl_Interp; token:PTcl_Command; subcmdListPtr:PPTcl_Obj):cint;
      tcl_GetEnsembleMappingDict : function (interp:PTcl_Interp; token:PTcl_Command; mapDictPtr:PPTcl_Obj):cint;
      tcl_GetEnsembleUnknownHandler : function (interp:PTcl_Interp; token:PTcl_Command; unknownListPtr:PPTcl_Obj):cint;
      tcl_GetEnsembleFlags : function (interp:PTcl_Interp; token:PTcl_Command; flagsPtr:pcint):cint;
      tcl_GetEnsembleNamespace : function (interp:PTcl_Interp; token:PTcl_Command; namespacePtrPtr:PPTcl_Namespace):cint;
      tcl_SetTimeProc : procedure (getProc:Tcl_GetTimeProc; scaleProc:Tcl_ScaleTimeProc; clientData:ClientData);
      tcl_QueryTimeProc : procedure (getProc:Tcl_GetTimeProc; scaleProc:Tcl_ScaleTimeProc; clientData:PClientData);
      tcl_ChannelThreadActionProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverThreadActionProc;
      tcl_NewBignumObj : function (value:Pmp_int):PTcl_Obj;
      tcl_DbNewBignumObj : function (value:Pmp_int; _file:PChar; line:cint):PTcl_Obj;
      tcl_SetBignumObj : procedure (obj:PTcl_Obj; value:Pmp_int);
      tcl_GetBignumFromObj : function (interp:PTcl_Interp; obj:PTcl_Obj; value:Pmp_int):cint;
      tcl_TakeBignumFromObj : function (interp:PTcl_Interp; obj:PTcl_Obj; value:Pmp_int):cint;
      tcl_TruncateChannel : function (chan:PTcl_Channel; length:Tcl_WideInt):cint;
      tcl_ChannelTruncateProc : function (chanTypePtr:PTcl_ChannelType):Tcl_DriverTruncateProc;
      tcl_SetChannelErrorInterp : procedure (interp:PTcl_Interp; msg:PTcl_Obj);
      tcl_GetChannelErrorInterp : procedure (interp:PTcl_Interp; msg:PPTcl_Obj);
      tcl_SetChannelError : procedure (chan:PTcl_Channel; msg:PTcl_Obj);
      tcl_GetChannelError : procedure (chan:PTcl_Channel; msg:PPTcl_Obj);
      tcl_InitBignumFromDouble : function (interp:PTcl_Interp; initval:double; toInit:Pmp_int):cint;
      tcl_GetNamespaceUnknownHandler : function (interp:PTcl_Interp; nsPtr:PTcl_Namespace):PTcl_Obj;
      tcl_SetNamespaceUnknownHandler : function (interp:PTcl_Interp; nsPtr:PTcl_Namespace; handlerPtr:PTcl_Obj):cint;
      tcl_GetEncodingFromObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; encodingPtr:PTcl_Encoding):cint;
      tcl_GetEncodingSearchPath : function :PTcl_Obj;
      tcl_SetEncodingSearchPath : function (searchPath:PTcl_Obj):cint;
      tcl_GetEncodingNameFromEnvironment : function (bufPtr:PTcl_DString):PChar;
      tcl_PkgRequireProc : function (interp:PTcl_Interp; name:PChar; objc:cint; objv:array of PTcl_Obj; clientDataPtr:PClientData):cint;
      tcl_AppendObjToErrorInfo : procedure (interp:PTcl_Interp; objPtr:PTcl_Obj);
      tcl_AppendLimitedToObj : procedure (objPtr:PTcl_Obj; bytes:PChar; length:cint; limit:cint; ellipsis:PChar);
      tcl_Format : function (interp:PTcl_Interp; format:PChar; objc:cint; objv:array of PTcl_Obj):PTcl_Obj;
      tcl_AppendFormatToObj : function (interp:PTcl_Interp; objPtr:PTcl_Obj; format:PChar; objc:cint; objv:array of PTcl_Obj):cint;
      tcl_ObjPrintf : function (format:PChar; args:array of const):PTcl_Obj;cdecl;
      tcl_AppendPrintfToObj : procedure (objPtr:PTcl_Obj; format:PChar; args:array of const);cdecl;
    end;

Var
  tclStubsPtr : PTclStubs;cvar;external;

(*
 * Inline function declarations:
 *)

{$IF 0}// defined(USE_TCL_STUBS) && !defined(USE_TCL_STUB_PROCS)}

const
  Tcl_PkgProvideEx = tclStubsPtr^.tcl_PkgProvideEx;  
  Tcl_PkgRequireEx = tclStubsPtr^.tcl_PkgRequireEx;  
  Tcl_Panic = tclStubsPtr^.tcl_Panic;  
  Tcl_Alloc = tclStubsPtr^.tcl_Alloc;  
  Tcl_Free = tclStubsPtr^.tcl_Free;  
  Tcl_Realloc = tclStubsPtr^.tcl_Realloc;  
  Tcl_DbCkalloc = tclStubsPtr^.tcl_DbCkalloc;  
  Tcl_DbCkfree = tclStubsPtr^.tcl_DbCkfree;  
  Tcl_DbCkrealloc = tclStubsPtr^.tcl_DbCkrealloc;  
  Tcl_CreateFileHandler = tclStubsPtr^.tcl_CreateFileHandler;
  Tcl_CreateFileHandler = tclStubsPtr^.tcl_CreateFileHandler;  
  Tcl_DeleteFileHandler = tclStubsPtr^.tcl_DeleteFileHandler;  
  Tcl_DeleteFileHandler = tclStubsPtr^.tcl_DeleteFileHandler;  
  Tcl_SetTimer = tclStubsPtr^.tcl_SetTimer;  
  Tcl_Sleep = tclStubsPtr^.tcl_Sleep;  
  Tcl_WaitForEvent = tclStubsPtr^.tcl_WaitForEvent;  
  Tcl_AppendAllObjTypes = tclStubsPtr^.tcl_AppendAllObjTypes;  
  Tcl_AppendStringsToObj = tclStubsPtr^.tcl_AppendStringsToObj;  
  Tcl_AppendToObj = tclStubsPtr^.tcl_AppendToObj;  
  Tcl_ConcatObj = tclStubsPtr^.tcl_ConcatObj;  
  Tcl_ConvertToType = tclStubsPtr^.tcl_ConvertToType;  
  Tcl_DbDecrRefCount = tclStubsPtr^.tcl_DbDecrRefCount;  
  Tcl_DbIncrRefCount = tclStubsPtr^.tcl_DbIncrRefCount;  
  Tcl_DbIsShared = tclStubsPtr^.tcl_DbIsShared;  
  Tcl_DbNewBooleanObj = tclStubsPtr^.tcl_DbNewBooleanObj;  
  Tcl_DbNewByteArrayObj = tclStubsPtr^.tcl_DbNewByteArrayObj;  
  Tcl_DbNewDoubleObj = tclStubsPtr^.tcl_DbNewDoubleObj;  
  Tcl_DbNewListObj = tclStubsPtr^.tcl_DbNewListObj;  
  Tcl_DbNewLongObj = tclStubsPtr^.tcl_DbNewLongObj;  
  Tcl_DbNewObj = tclStubsPtr^.tcl_DbNewObj;  
  Tcl_DbNewStringObj = tclStubsPtr^.tcl_DbNewStringObj;  
  Tcl_DuplicateObj = tclStubsPtr^.tcl_DuplicateObj;  
  TclFreeObj = tclStubsPtr^.tclFreeObj;  
  Tcl_GetBoolean = tclStubsPtr^.tcl_GetBoolean;  
  Tcl_GetBooleanFromObj = tclStubsPtr^.tcl_GetBooleanFromObj;  
  Tcl_GetByteArrayFromObj = tclStubsPtr^.tcl_GetByteArrayFromObj;  
  Tcl_GetDouble = tclStubsPtr^.tcl_GetDouble;  
  Tcl_GetDoubleFromObj = tclStubsPtr^.tcl_GetDoubleFromObj;  
  Tcl_GetIndexFromObj = tclStubsPtr^.tcl_GetIndexFromObj;  
  Tcl_GetInt = tclStubsPtr^.tcl_GetInt;  
  Tcl_GetIntFromObj = tclStubsPtr^.tcl_GetIntFromObj;  
  Tcl_GetLongFromObj = tclStubsPtr^.tcl_GetLongFromObj;  
  Tcl_GetObjType = tclStubsPtr^.tcl_GetObjType;  
  Tcl_GetStringFromObj = tclStubsPtr^.tcl_GetStringFromObj;  
  Tcl_InvalidateStringRep = tclStubsPtr^.tcl_InvalidateStringRep;  
  Tcl_ListObjAppendList = tclStubsPtr^.tcl_ListObjAppendList;  
  Tcl_ListObjAppendElement = tclStubsPtr^.tcl_ListObjAppendElement;  
  Tcl_ListObjGetElements = tclStubsPtr^.tcl_ListObjGetElements;  
  Tcl_ListObjIndex = tclStubsPtr^.tcl_ListObjIndex;  
  Tcl_ListObjLength = tclStubsPtr^.tcl_ListObjLength;  
  Tcl_ListObjReplace = tclStubsPtr^.tcl_ListObjReplace;  
  Tcl_NewBooleanObj = tclStubsPtr^.tcl_NewBooleanObj;  
  Tcl_NewByteArrayObj = tclStubsPtr^.tcl_NewByteArrayObj;  
  Tcl_NewDoubleObj = tclStubsPtr^.tcl_NewDoubleObj;  
  Tcl_NewIntObj = tclStubsPtr^.tcl_NewIntObj;  
  Tcl_NewListObj = tclStubsPtr^.tcl_NewListObj;  
  Tcl_NewLongObj = tclStubsPtr^.tcl_NewLongObj;  
  Tcl_NewObj = tclStubsPtr^.tcl_NewObj;  
  Tcl_NewStringObj = tclStubsPtr^.tcl_NewStringObj;  
  Tcl_SetBooleanObj = tclStubsPtr^.tcl_SetBooleanObj;  
  Tcl_SetByteArrayLength = tclStubsPtr^.tcl_SetByteArrayLength;  
  Tcl_SetByteArrayObj = tclStubsPtr^.tcl_SetByteArrayObj;  
  Tcl_SetDoubleObj = tclStubsPtr^.tcl_SetDoubleObj;  
  Tcl_SetIntObj = tclStubsPtr^.tcl_SetIntObj;  
  Tcl_SetListObj = tclStubsPtr^.tcl_SetListObj;  
  Tcl_SetLongObj = tclStubsPtr^.tcl_SetLongObj;  
  Tcl_SetObjLength = tclStubsPtr^.tcl_SetObjLength;  
  Tcl_SetStringObj = tclStubsPtr^.tcl_SetStringObj;  
  Tcl_AddErrorInfo = tclStubsPtr^.tcl_AddErrorInfo;  
  Tcl_AddObjErrorInfo = tclStubsPtr^.tcl_AddObjErrorInfo;  
  Tcl_AllowExceptions = tclStubsPtr^.tcl_AllowExceptions;  
  Tcl_AppendElement = tclStubsPtr^.tcl_AppendElement;  
  Tcl_AppendResult = tclStubsPtr^.tcl_AppendResult;  
  Tcl_AsyncCreate = tclStubsPtr^.tcl_AsyncCreate;  
  Tcl_AsyncDelete = tclStubsPtr^.tcl_AsyncDelete;  
  Tcl_AsyncInvoke = tclStubsPtr^.tcl_AsyncInvoke;  
  Tcl_AsyncMark = tclStubsPtr^.tcl_AsyncMark;  
  Tcl_AsyncReady = tclStubsPtr^.tcl_AsyncReady;  
  Tcl_BackgroundError = tclStubsPtr^.tcl_BackgroundError;  
  Tcl_Backslash = tclStubsPtr^.tcl_Backslash;  
  Tcl_BadChannelOption = tclStubsPtr^.tcl_BadChannelOption;  
  Tcl_CallWhenDeleted = tclStubsPtr^.tcl_CallWhenDeleted;  
  Tcl_CancelIdleCall = tclStubsPtr^.tcl_CancelIdleCall;  
  Tcl_Close = tclStubsPtr^.tcl_Close;  
  Tcl_CommandComplete = tclStubsPtr^.tcl_CommandComplete;  
  Tcl_Concat = tclStubsPtr^.tcl_Concat;  
  Tcl_ConvertElement = tclStubsPtr^.tcl_ConvertElement;  
  Tcl_ConvertCountedElement = tclStubsPtr^.tcl_ConvertCountedElement;  
  Tcl_CreateAlias = tclStubsPtr^.tcl_CreateAlias;  
  Tcl_CreateAliasObj = tclStubsPtr^.tcl_CreateAliasObj;  
  Tcl_CreateChannel = tclStubsPtr^.tcl_CreateChannel;  
  Tcl_CreateChannelHandler = tclStubsPtr^.tcl_CreateChannelHandler;  
  Tcl_CreateCloseHandler = tclStubsPtr^.tcl_CreateCloseHandler;  
  Tcl_CreateCommand = tclStubsPtr^.tcl_CreateCommand;  
  Tcl_CreateEventSource = tclStubsPtr^.tcl_CreateEventSource;  
  Tcl_CreateExitHandler = tclStubsPtr^.tcl_CreateExitHandler;  
  Tcl_CreateInterp = tclStubsPtr^.tcl_CreateInterp;  
  Tcl_CreateMathFunc = tclStubsPtr^.tcl_CreateMathFunc;  
  Tcl_CreateObjCommand = tclStubsPtr^.tcl_CreateObjCommand;  
  Tcl_CreateSlave = tclStubsPtr^.tcl_CreateSlave;  
  Tcl_CreateTimerHandler = tclStubsPtr^.tcl_CreateTimerHandler;  
  Tcl_CreateTrace = tclStubsPtr^.tcl_CreateTrace;  
  Tcl_DeleteAssocData = tclStubsPtr^.tcl_DeleteAssocData;  
  Tcl_DeleteChannelHandler = tclStubsPtr^.tcl_DeleteChannelHandler;  
  Tcl_DeleteCloseHandler = tclStubsPtr^.tcl_DeleteCloseHandler;  
  Tcl_DeleteCommand = tclStubsPtr^.tcl_DeleteCommand;  
  Tcl_DeleteCommandFromToken = tclStubsPtr^.tcl_DeleteCommandFromToken;  
  Tcl_DeleteEvents = tclStubsPtr^.tcl_DeleteEvents;  
  Tcl_DeleteEventSource = tclStubsPtr^.tcl_DeleteEventSource;  
  Tcl_DeleteExitHandler = tclStubsPtr^.tcl_DeleteExitHandler;  
  Tcl_DeleteHashEntry = tclStubsPtr^.tcl_DeleteHashEntry;  
  Tcl_DeleteHashTable = tclStubsPtr^.tcl_DeleteHashTable;  
  Tcl_DeleteInterp = tclStubsPtr^.tcl_DeleteInterp;  
  Tcl_DetachPids = tclStubsPtr^.tcl_DetachPids;  
  Tcl_DeleteTimerHandler = tclStubsPtr^.tcl_DeleteTimerHandler;  
  Tcl_DeleteTrace = tclStubsPtr^.tcl_DeleteTrace;  
  Tcl_DontCallWhenDeleted = tclStubsPtr^.tcl_DontCallWhenDeleted;  
  Tcl_DoOneEvent = tclStubsPtr^.tcl_DoOneEvent;  
  Tcl_DoWhenIdle = tclStubsPtr^.tcl_DoWhenIdle;  
  Tcl_DStringAppend = tclStubsPtr^.tcl_DStringAppend;  
  Tcl_DStringAppendElement = tclStubsPtr^.tcl_DStringAppendElement;  
  Tcl_DStringEndSublist = tclStubsPtr^.tcl_DStringEndSublist;  
  Tcl_DStringFree = tclStubsPtr^.tcl_DStringFree;  
  Tcl_DStringGetResult = tclStubsPtr^.tcl_DStringGetResult;  
  Tcl_DStringInit = tclStubsPtr^.tcl_DStringInit;  
  Tcl_DStringResult = tclStubsPtr^.tcl_DStringResult;  
  Tcl_DStringSetLength = tclStubsPtr^.tcl_DStringSetLength;  
  Tcl_DStringStartSublist = tclStubsPtr^.tcl_DStringStartSublist;  
  Tcl_Eof = tclStubsPtr^.tcl_Eof;  
  Tcl_ErrnoId = tclStubsPtr^.tcl_ErrnoId;  
  Tcl_ErrnoMsg = tclStubsPtr^.tcl_ErrnoMsg;  
  Tcl_Eval = tclStubsPtr^.tcl_Eval;  
  Tcl_EvalFile = tclStubsPtr^.tcl_EvalFile;  
  Tcl_EvalObj = tclStubsPtr^.tcl_EvalObj;  
  Tcl_EventuallyFree = tclStubsPtr^.tcl_EventuallyFree;  
  Tcl_Exit = tclStubsPtr^.tcl_Exit;  
  Tcl_ExposeCommand = tclStubsPtr^.tcl_ExposeCommand;  
  Tcl_ExprBoolean = tclStubsPtr^.tcl_ExprBoolean;  
  Tcl_ExprBooleanObj = tclStubsPtr^.tcl_ExprBooleanObj;  
  Tcl_ExprDouble = tclStubsPtr^.tcl_ExprDouble;  
  Tcl_ExprDoubleObj = tclStubsPtr^.tcl_ExprDoubleObj;  
  Tcl_ExprLong = tclStubsPtr^.tcl_ExprLong;  
  Tcl_ExprLongObj = tclStubsPtr^.tcl_ExprLongObj;  
  Tcl_ExprObj = tclStubsPtr^.tcl_ExprObj;  
  Tcl_ExprString = tclStubsPtr^.tcl_ExprString;  
  Tcl_Finalize = tclStubsPtr^.tcl_Finalize;  
  Tcl_FindExecutable = tclStubsPtr^.tcl_FindExecutable;  
  Tcl_FirstHashEntry = tclStubsPtr^.tcl_FirstHashEntry;  
  Tcl_Flush = tclStubsPtr^.tcl_Flush;  
  Tcl_FreeResult = tclStubsPtr^.tcl_FreeResult;  
  Tcl_GetAlias = tclStubsPtr^.tcl_GetAlias;  
  Tcl_GetAliasObj = tclStubsPtr^.tcl_GetAliasObj;  
  Tcl_GetAssocData = tclStubsPtr^.tcl_GetAssocData;  
  Tcl_GetChannel = tclStubsPtr^.tcl_GetChannel;  
  Tcl_GetChannelBufferSize = tclStubsPtr^.tcl_GetChannelBufferSize;  
  Tcl_GetChannelHandle = tclStubsPtr^.tcl_GetChannelHandle;  
  Tcl_GetChannelInstanceData = tclStubsPtr^.tcl_GetChannelInstanceData;  
  Tcl_GetChannelMode = tclStubsPtr^.tcl_GetChannelMode;  
  Tcl_GetChannelName = tclStubsPtr^.tcl_GetChannelName;  
  Tcl_GetChannelOption = tclStubsPtr^.tcl_GetChannelOption;  
  Tcl_GetChannelType = tclStubsPtr^.tcl_GetChannelType;  
  Tcl_GetCommandInfo = tclStubsPtr^.tcl_GetCommandInfo;  
  Tcl_GetCommandName = tclStubsPtr^.tcl_GetCommandName;  
  Tcl_GetErrno = tclStubsPtr^.tcl_GetErrno;  
  Tcl_GetHostName = tclStubsPtr^.tcl_GetHostName;  
  Tcl_GetInterpPath = tclStubsPtr^.tcl_GetInterpPath;  
  Tcl_GetMaster = tclStubsPtr^.tcl_GetMaster;  
  Tcl_GetNameOfExecutable = tclStubsPtr^.tcl_GetNameOfExecutable;  
  Tcl_GetObjResult = tclStubsPtr^.tcl_GetObjResult;  
  Tcl_GetOpenFile = tclStubsPtr^.tcl_GetOpenFile;  
  Tcl_GetOpenFile = tclStubsPtr^.tcl_GetOpenFile;  
  Tcl_GetPathType = tclStubsPtr^.tcl_GetPathType;  
  Tcl_Gets = tclStubsPtr^.tcl_Gets;  
  Tcl_GetsObj = tclStubsPtr^.tcl_GetsObj;  
  Tcl_GetServiceMode = tclStubsPtr^.tcl_GetServiceMode;  
  Tcl_GetSlave = tclStubsPtr^.tcl_GetSlave;  
  Tcl_GetStdChannel = tclStubsPtr^.tcl_GetStdChannel;  
  Tcl_GetStringResult = tclStubsPtr^.tcl_GetStringResult;  
  Tcl_GetVar = tclStubsPtr^.tcl_GetVar;  
  Tcl_GetVar2 = tclStubsPtr^.tcl_GetVar2;  
  Tcl_GlobalEval = tclStubsPtr^.tcl_GlobalEval;  
  Tcl_GlobalEvalObj = tclStubsPtr^.tcl_GlobalEvalObj;  
  Tcl_HideCommand = tclStubsPtr^.tcl_HideCommand;  
  Tcl_Init = tclStubsPtr^.tcl_Init;  
  Tcl_InitHashTable = tclStubsPtr^.tcl_InitHashTable;  
  Tcl_InputBlocked = tclStubsPtr^.tcl_InputBlocked;  
  Tcl_InputBuffered = tclStubsPtr^.tcl_InputBuffered;  
  Tcl_InterpDeleted = tclStubsPtr^.tcl_InterpDeleted;  
  Tcl_IsSafe = tclStubsPtr^.tcl_IsSafe;  
  Tcl_JoinPath = tclStubsPtr^.tcl_JoinPath;  
  Tcl_LinkVar = tclStubsPtr^.tcl_LinkVar;  
  Tcl_MakeFileChannel = tclStubsPtr^.tcl_MakeFileChannel;  
  Tcl_MakeSafe = tclStubsPtr^.tcl_MakeSafe;  
  Tcl_MakeTcpClientChannel = tclStubsPtr^.tcl_MakeTcpClientChannel;  
  Tcl_Merge = tclStubsPtr^.tcl_Merge;  
  Tcl_NextHashEntry = tclStubsPtr^.tcl_NextHashEntry;  
  Tcl_NotifyChannel = tclStubsPtr^.tcl_NotifyChannel;  
  Tcl_ObjGetVar2 = tclStubsPtr^.tcl_ObjGetVar2;  
  Tcl_ObjSetVar2 = tclStubsPtr^.tcl_ObjSetVar2;  
  Tcl_OpenCommandChannel = tclStubsPtr^.tcl_OpenCommandChannel;  
  Tcl_OpenFileChannel = tclStubsPtr^.tcl_OpenFileChannel;  
  Tcl_OpenTcpClient = tclStubsPtr^.tcl_OpenTcpClient;  
  Tcl_OpenTcpServer = tclStubsPtr^.tcl_OpenTcpServer;  
  Tcl_Preserve = tclStubsPtr^.tcl_Preserve;  
  Tcl_PrintDouble = tclStubsPtr^.tcl_PrintDouble;  
  Tcl_PutEnv = tclStubsPtr^.tcl_PutEnv;  
  Tcl_PosixError = tclStubsPtr^.tcl_PosixError;  
  Tcl_QueueEvent = tclStubsPtr^.tcl_QueueEvent;  
  Tcl_Read = tclStubsPtr^.tcl_Read;  
  Tcl_ReapDetachedProcs = tclStubsPtr^.tcl_ReapDetachedProcs;  
  Tcl_RecordAndEval = tclStubsPtr^.tcl_RecordAndEval;  
  Tcl_RecordAndEvalObj = tclStubsPtr^.tcl_RecordAndEvalObj;  
  Tcl_RegisterChannel = tclStubsPtr^.tcl_RegisterChannel;  
  Tcl_RegisterObjType = tclStubsPtr^.tcl_RegisterObjType;  
  Tcl_RegExpCompile = tclStubsPtr^.tcl_RegExpCompile;  
  Tcl_RegExpExec = tclStubsPtr^.tcl_RegExpExec;  
  Tcl_RegExpMatch = tclStubsPtr^.tcl_RegExpMatch;  
  Tcl_RegExpRange = tclStubsPtr^.tcl_RegExpRange;  
  Tcl_Release = tclStubsPtr^.tcl_Release;  
  Tcl_ResetResult = tclStubsPtr^.tcl_ResetResult;  
  Tcl_ScanElement = tclStubsPtr^.tcl_ScanElement;  
  Tcl_ScanCountedElement = tclStubsPtr^.tcl_ScanCountedElement;  
  Tcl_SeekOld = tclStubsPtr^.tcl_SeekOld;  
  Tcl_ServiceAll = tclStubsPtr^.tcl_ServiceAll;  
  Tcl_ServiceEvent = tclStubsPtr^.tcl_ServiceEvent;  
  Tcl_SetAssocData = tclStubsPtr^.tcl_SetAssocData;  
  Tcl_SetChannelBufferSize = tclStubsPtr^.tcl_SetChannelBufferSize;  
  Tcl_SetChannelOption = tclStubsPtr^.tcl_SetChannelOption;  
  Tcl_SetCommandInfo = tclStubsPtr^.tcl_SetCommandInfo;  
  Tcl_SetErrno = tclStubsPtr^.tcl_SetErrno;  
  Tcl_SetErrorCode = tclStubsPtr^.tcl_SetErrorCode;  
  Tcl_SetMaxBlockTime = tclStubsPtr^.tcl_SetMaxBlockTime;  
  Tcl_SetPanicProc = tclStubsPtr^.tcl_SetPanicProc;  
  Tcl_SetRecursionLimit = tclStubsPtr^.tcl_SetRecursionLimit;  
  Tcl_SetResult = tclStubsPtr^.tcl_SetResult;  
  Tcl_SetServiceMode = tclStubsPtr^.tcl_SetServiceMode;  
  Tcl_SetObjErrorCode = tclStubsPtr^.tcl_SetObjErrorCode;  
  Tcl_SetObjResult = tclStubsPtr^.tcl_SetObjResult;  
  Tcl_SetStdChannel = tclStubsPtr^.tcl_SetStdChannel;  
  Tcl_SetVar = tclStubsPtr^.tcl_SetVar;  
  Tcl_SetVar2 = tclStubsPtr^.tcl_SetVar2;  
  Tcl_SignalId = tclStubsPtr^.tcl_SignalId;  
  Tcl_SignalMsg = tclStubsPtr^.tcl_SignalMsg;  
  Tcl_SourceRCFile = tclStubsPtr^.tcl_SourceRCFile;  
  Tcl_SplitList = tclStubsPtr^.tcl_SplitList;  
  Tcl_SplitPath = tclStubsPtr^.tcl_SplitPath;  
  Tcl_StaticPackage = tclStubsPtr^.tcl_StaticPackage;  
  Tcl_StringMatch = tclStubsPtr^.tcl_StringMatch;  
  Tcl_TellOld = tclStubsPtr^.tcl_TellOld;  
  Tcl_TraceVar = tclStubsPtr^.tcl_TraceVar;  
  Tcl_TraceVar2 = tclStubsPtr^.tcl_TraceVar2;  
  Tcl_TranslateFileName = tclStubsPtr^.tcl_TranslateFileName;  
  Tcl_Ungets = tclStubsPtr^.tcl_Ungets;  
  Tcl_UnlinkVar = tclStubsPtr^.tcl_UnlinkVar;  
  Tcl_UnregisterChannel = tclStubsPtr^.tcl_UnregisterChannel;  
  Tcl_UnsetVar = tclStubsPtr^.tcl_UnsetVar;  
  Tcl_UnsetVar2 = tclStubsPtr^.tcl_UnsetVar2;  
  Tcl_UntraceVar = tclStubsPtr^.tcl_UntraceVar;  
  Tcl_UntraceVar2 = tclStubsPtr^.tcl_UntraceVar2;  
  Tcl_UpdateLinkedVar = tclStubsPtr^.tcl_UpdateLinkedVar;  
  Tcl_UpVar = tclStubsPtr^.tcl_UpVar;  
  Tcl_UpVar2 = tclStubsPtr^.tcl_UpVar2;  
  Tcl_VarEval = tclStubsPtr^.tcl_VarEval;  
  Tcl_VarTraceInfo = tclStubsPtr^.tcl_VarTraceInfo;  
  Tcl_VarTraceInfo2 = tclStubsPtr^.tcl_VarTraceInfo2;  
  Tcl_Write = tclStubsPtr^.tcl_Write;  
  Tcl_WrongNumArgs = tclStubsPtr^.tcl_WrongNumArgs;  
  Tcl_DumpActiveMemory = tclStubsPtr^.tcl_DumpActiveMemory;  
  Tcl_ValidateAllMemory = tclStubsPtr^.tcl_ValidateAllMemory;  
  Tcl_AppendResultVA = tclStubsPtr^.tcl_AppendResultVA;  
  Tcl_AppendStringsToObjVA = tclStubsPtr^.tcl_AppendStringsToObjVA;  
  Tcl_HashStats = tclStubsPtr^.tcl_HashStats;  
  Tcl_ParseVar = tclStubsPtr^.tcl_ParseVar;  
  Tcl_PkgPresent = tclStubsPtr^.tcl_PkgPresent;  
  Tcl_PkgPresentEx = tclStubsPtr^.tcl_PkgPresentEx;  
  Tcl_PkgProvide = tclStubsPtr^.tcl_PkgProvide;  
  Tcl_PkgRequire = tclStubsPtr^.tcl_PkgRequire;  
  Tcl_SetErrorCodeVA = tclStubsPtr^.tcl_SetErrorCodeVA;  
  Tcl_VarEvalVA = tclStubsPtr^.tcl_VarEvalVA;  
  Tcl_WaitPid = tclStubsPtr^.tcl_WaitPid;  
  Tcl_PanicVA = tclStubsPtr^.tcl_PanicVA;  
  Tcl_GetVersion = tclStubsPtr^.tcl_GetVersion;  
  Tcl_InitMemory = tclStubsPtr^.tcl_InitMemory;  
  Tcl_StackChannel = tclStubsPtr^.tcl_StackChannel;  
  Tcl_UnstackChannel = tclStubsPtr^.tcl_UnstackChannel;  
  Tcl_GetStackedChannel = tclStubsPtr^.tcl_GetStackedChannel;  
  Tcl_SetMainLoop = tclStubsPtr^.tcl_SetMainLoop;  
  Tcl_AppendObjToObj = tclStubsPtr^.tcl_AppendObjToObj;  
  Tcl_CreateEncoding = tclStubsPtr^.tcl_CreateEncoding;  
  Tcl_CreateThreadExitHandler = tclStubsPtr^.tcl_CreateThreadExitHandler;  
  Tcl_DeleteThreadExitHandler = tclStubsPtr^.tcl_DeleteThreadExitHandler;  
  Tcl_DiscardResult = tclStubsPtr^.tcl_DiscardResult;  
  Tcl_EvalEx = tclStubsPtr^.tcl_EvalEx;  
  Tcl_EvalObjv = tclStubsPtr^.tcl_EvalObjv;  
  Tcl_EvalObjEx = tclStubsPtr^.tcl_EvalObjEx;  
  Tcl_ExitThread = tclStubsPtr^.tcl_ExitThread;  
  Tcl_ExternalToUtf = tclStubsPtr^.tcl_ExternalToUtf;  
  Tcl_ExternalToUtfDString = tclStubsPtr^.tcl_ExternalToUtfDString;  
  Tcl_FinalizeThread = tclStubsPtr^.tcl_FinalizeThread;  
  Tcl_FinalizeNotifier = tclStubsPtr^.tcl_FinalizeNotifier;  
  Tcl_FreeEncoding = tclStubsPtr^.tcl_FreeEncoding;  
  Tcl_GetCurrentThread = tclStubsPtr^.tcl_GetCurrentThread;  
  Tcl_GetEncoding = tclStubsPtr^.tcl_GetEncoding;  
  Tcl_GetEncodingName = tclStubsPtr^.tcl_GetEncodingName;  
  Tcl_GetEncodingNames = tclStubsPtr^.tcl_GetEncodingNames;  
  Tcl_GetIndexFromObjStruct = tclStubsPtr^.tcl_GetIndexFromObjStruct;  
  Tcl_GetThreadData = tclStubsPtr^.tcl_GetThreadData;  
  Tcl_GetVar2Ex = tclStubsPtr^.tcl_GetVar2Ex;  
  Tcl_InitNotifier = tclStubsPtr^.tcl_InitNotifier;  
  Tcl_MutexLock = tclStubsPtr^.tcl_MutexLock;  
  Tcl_MutexUnlock = tclStubsPtr^.tcl_MutexUnlock;  
  Tcl_ConditionNotify = tclStubsPtr^.tcl_ConditionNotify;  
  Tcl_ConditionWait = tclStubsPtr^.tcl_ConditionWait;  
  Tcl_NumUtfChars = tclStubsPtr^.tcl_NumUtfChars;  
  Tcl_ReadChars = tclStubsPtr^.tcl_ReadChars;  
  Tcl_RestoreResult = tclStubsPtr^.tcl_RestoreResult;  
  Tcl_SaveResult = tclStubsPtr^.tcl_SaveResult;  
  Tcl_SetSystemEncoding = tclStubsPtr^.tcl_SetSystemEncoding;  
  Tcl_SetVar2Ex = tclStubsPtr^.tcl_SetVar2Ex;  
  Tcl_ThreadAlert = tclStubsPtr^.tcl_ThreadAlert;  
  Tcl_ThreadQueueEvent = tclStubsPtr^.tcl_ThreadQueueEvent;  
  Tcl_UniCharAtIndex = tclStubsPtr^.tcl_UniCharAtIndex;  
  Tcl_UniCharToLower = tclStubsPtr^.tcl_UniCharToLower;  
  Tcl_UniCharToTitle = tclStubsPtr^.tcl_UniCharToTitle;  
  Tcl_UniCharToUpper = tclStubsPtr^.tcl_UniCharToUpper;  
  Tcl_UniCharToUtf = tclStubsPtr^.tcl_UniCharToUtf;  
  Tcl_UtfAtIndex = tclStubsPtr^.tcl_UtfAtIndex;  
  Tcl_UtfCharComplete = tclStubsPtr^.tcl_UtfCharComplete;  
  Tcl_UtfBackslash = tclStubsPtr^.tcl_UtfBackslash;  
  Tcl_UtfFindFirst = tclStubsPtr^.tcl_UtfFindFirst;  
  Tcl_UtfFindLast = tclStubsPtr^.tcl_UtfFindLast;  
  Tcl_UtfNext = tclStubsPtr^.tcl_UtfNext;  
  Tcl_UtfPrev = tclStubsPtr^.tcl_UtfPrev;  
  Tcl_UtfToExternal = tclStubsPtr^.tcl_UtfToExternal;  
  Tcl_UtfToExternalDString = tclStubsPtr^.tcl_UtfToExternalDString;  
  Tcl_UtfToLower = tclStubsPtr^.tcl_UtfToLower;  
  Tcl_UtfToTitle = tclStubsPtr^.tcl_UtfToTitle;  
  Tcl_UtfToUniChar = tclStubsPtr^.tcl_UtfToUniChar;  
  Tcl_UtfToUpper = tclStubsPtr^.tcl_UtfToUpper;  
  Tcl_WriteChars = tclStubsPtr^.tcl_WriteChars;  
  Tcl_WriteObj = tclStubsPtr^.tcl_WriteObj;  
  Tcl_GetString = tclStubsPtr^.tcl_GetString;  
  Tcl_GetDefaultEncodingDir = tclStubsPtr^.tcl_GetDefaultEncodingDir;  
  Tcl_SetDefaultEncodingDir = tclStubsPtr^.tcl_SetDefaultEncodingDir;  
  Tcl_AlertNotifier = tclStubsPtr^.tcl_AlertNotifier;  
  Tcl_ServiceModeHook = tclStubsPtr^.tcl_ServiceModeHook;  
  Tcl_UniCharIsAlnum = tclStubsPtr^.tcl_UniCharIsAlnum;  
  Tcl_UniCharIsAlpha = tclStubsPtr^.tcl_UniCharIsAlpha;  
  Tcl_UniCharIsDigit = tclStubsPtr^.tcl_UniCharIsDigit;  
  Tcl_UniCharIsLower = tclStubsPtr^.tcl_UniCharIsLower;  
  Tcl_UniCharIsSpace = tclStubsPtr^.tcl_UniCharIsSpace;  
  Tcl_UniCharIsUpper = tclStubsPtr^.tcl_UniCharIsUpper;  
  Tcl_UniCharIsWordChar = tclStubsPtr^.tcl_UniCharIsWordChar;  
  Tcl_UniCharLen = tclStubsPtr^.tcl_UniCharLen;  
  Tcl_UniCharNcmp = tclStubsPtr^.tcl_UniCharNcmp;  
  Tcl_UniCharToUtfDString = tclStubsPtr^.tcl_UniCharToUtfDString;  
  Tcl_UtfToUniCharDString = tclStubsPtr^.tcl_UtfToUniCharDString;  
  Tcl_GetRegExpFromObj = tclStubsPtr^.tcl_GetRegExpFromObj;  
  Tcl_EvalTokens = tclStubsPtr^.tcl_EvalTokens;  
  Tcl_FreeParse = tclStubsPtr^.tcl_FreeParse;  
  Tcl_LogCommandInfo = tclStubsPtr^.tcl_LogCommandInfo;  
  Tcl_ParseBraces = tclStubsPtr^.tcl_ParseBraces;  
  Tcl_ParseCommand = tclStubsPtr^.tcl_ParseCommand;  
  Tcl_ParseExpr = tclStubsPtr^.tcl_ParseExpr;  
  Tcl_ParseQuotedString = tclStubsPtr^.tcl_ParseQuotedString;  
  Tcl_ParseVarName = tclStubsPtr^.tcl_ParseVarName;  
  Tcl_GetCwd = tclStubsPtr^.tcl_GetCwd;  
  Tcl_Chdir = tclStubsPtr^.tcl_Chdir;  
  Tcl_Access = tclStubsPtr^.tcl_Access;  
  Tcl_Stat = tclStubsPtr^.tcl_Stat;  
  Tcl_UtfNcmp = tclStubsPtr^.tcl_UtfNcmp;  
  Tcl_UtfNcasecmp = tclStubsPtr^.tcl_UtfNcasecmp;  
  Tcl_StringCaseMatch = tclStubsPtr^.tcl_StringCaseMatch;  
  Tcl_UniCharIsControl = tclStubsPtr^.tcl_UniCharIsControl;  
  Tcl_UniCharIsGraph = tclStubsPtr^.tcl_UniCharIsGraph;  
  Tcl_UniCharIsPrint = tclStubsPtr^.tcl_UniCharIsPrint;  
  Tcl_UniCharIsPunct = tclStubsPtr^.tcl_UniCharIsPunct;  
  Tcl_RegExpExecObj = tclStubsPtr^.tcl_RegExpExecObj;  
  Tcl_RegExpGetInfo = tclStubsPtr^.tcl_RegExpGetInfo;  
  Tcl_NewUnicodeObj = tclStubsPtr^.tcl_NewUnicodeObj;  
  Tcl_SetUnicodeObj = tclStubsPtr^.tcl_SetUnicodeObj;  
  Tcl_GetCharLength = tclStubsPtr^.tcl_GetCharLength;  
  Tcl_GetUniChar = tclStubsPtr^.tcl_GetUniChar;  
  Tcl_GetUnicode = tclStubsPtr^.tcl_GetUnicode;  
  Tcl_GetRange = tclStubsPtr^.tcl_GetRange;  
  Tcl_AppendUnicodeToObj = tclStubsPtr^.tcl_AppendUnicodeToObj;  
  Tcl_RegExpMatchObj = tclStubsPtr^.tcl_RegExpMatchObj;  
  Tcl_SetNotifier = tclStubsPtr^.tcl_SetNotifier;  
  Tcl_GetAllocMutex = tclStubsPtr^.tcl_GetAllocMutex;  
  Tcl_GetChannelNames = tclStubsPtr^.tcl_GetChannelNames;  
  Tcl_GetChannelNamesEx = tclStubsPtr^.tcl_GetChannelNamesEx;  
  Tcl_ProcObjCmd = tclStubsPtr^.tcl_ProcObjCmd;  
  Tcl_ConditionFinalize = tclStubsPtr^.tcl_ConditionFinalize;  
  Tcl_MutexFinalize = tclStubsPtr^.tcl_MutexFinalize;  
  Tcl_CreateThread = tclStubsPtr^.tcl_CreateThread;  
  Tcl_ReadRaw = tclStubsPtr^.tcl_ReadRaw;  
  Tcl_WriteRaw = tclStubsPtr^.tcl_WriteRaw;  
  Tcl_GetTopChannel = tclStubsPtr^.tcl_GetTopChannel;  
  Tcl_ChannelBuffered = tclStubsPtr^.tcl_ChannelBuffered;  
  Tcl_ChannelName = tclStubsPtr^.tcl_ChannelName;  
  Tcl_ChannelVersion = tclStubsPtr^.tcl_ChannelVersion;  
  Tcl_ChannelBlockModeProc = tclStubsPtr^.tcl_ChannelBlockModeProc;  
  Tcl_ChannelCloseProc = tclStubsPtr^.tcl_ChannelCloseProc;  
  Tcl_ChannelClose2Proc = tclStubsPtr^.tcl_ChannelClose2Proc;  
  Tcl_ChannelInputProc = tclStubsPtr^.tcl_ChannelInputProc;  
  Tcl_ChannelOutputProc = tclStubsPtr^.tcl_ChannelOutputProc;  
  Tcl_ChannelSeekProc = tclStubsPtr^.tcl_ChannelSeekProc;  
  Tcl_ChannelSetOptionProc = tclStubsPtr^.tcl_ChannelSetOptionProc;  
  Tcl_ChannelGetOptionProc = tclStubsPtr^.tcl_ChannelGetOptionProc;  
  Tcl_ChannelWatchProc = tclStubsPtr^.tcl_ChannelWatchProc;  
  Tcl_ChannelGetHandleProc = tclStubsPtr^.tcl_ChannelGetHandleProc;  
  Tcl_ChannelFlushProc = tclStubsPtr^.tcl_ChannelFlushProc;  
  Tcl_ChannelHandlerProc = tclStubsPtr^.tcl_ChannelHandlerProc;  
  Tcl_JoinThread = tclStubsPtr^.tcl_JoinThread;  
  Tcl_IsChannelShared = tclStubsPtr^.tcl_IsChannelShared;  
  Tcl_IsChannelRegistered = tclStubsPtr^.tcl_IsChannelRegistered;  
  Tcl_CutChannel = tclStubsPtr^.tcl_CutChannel;  
  Tcl_SpliceChannel = tclStubsPtr^.tcl_SpliceChannel;  
  Tcl_ClearChannelHandlers = tclStubsPtr^.tcl_ClearChannelHandlers;  
  Tcl_IsChannelExisting = tclStubsPtr^.tcl_IsChannelExisting;  
  Tcl_UniCharNcasecmp = tclStubsPtr^.tcl_UniCharNcasecmp;  
  Tcl_UniCharCaseMatch = tclStubsPtr^.tcl_UniCharCaseMatch;  
  Tcl_FindHashEntry = tclStubsPtr^.tcl_FindHashEntry;  
  Tcl_CreateHashEntry = tclStubsPtr^.tcl_CreateHashEntry;  
  Tcl_InitCustomHashTable = tclStubsPtr^.tcl_InitCustomHashTable;  
  Tcl_InitObjHashTable = tclStubsPtr^.tcl_InitObjHashTable;  
  Tcl_CommandTraceInfo = tclStubsPtr^.tcl_CommandTraceInfo;  
  Tcl_TraceCommand = tclStubsPtr^.tcl_TraceCommand;  
  Tcl_UntraceCommand = tclStubsPtr^.tcl_UntraceCommand;  
  Tcl_AttemptAlloc = tclStubsPtr^.tcl_AttemptAlloc;  
  Tcl_AttemptDbCkalloc = tclStubsPtr^.tcl_AttemptDbCkalloc;  
  Tcl_AttemptRealloc = tclStubsPtr^.tcl_AttemptRealloc;  
  Tcl_AttemptDbCkrealloc = tclStubsPtr^.tcl_AttemptDbCkrealloc;  
  Tcl_AttemptSetObjLength = tclStubsPtr^.tcl_AttemptSetObjLength;  
  Tcl_GetChannelThread = tclStubsPtr^.tcl_GetChannelThread;  
  Tcl_GetUnicodeFromObj = tclStubsPtr^.tcl_GetUnicodeFromObj;  
  Tcl_GetMathFuncInfo = tclStubsPtr^.tcl_GetMathFuncInfo;  
  Tcl_ListMathFuncs = tclStubsPtr^.tcl_ListMathFuncs;  
  Tcl_SubstObj = tclStubsPtr^.tcl_SubstObj;  
  Tcl_DetachChannel = tclStubsPtr^.tcl_DetachChannel;  
  Tcl_IsStandardChannel = tclStubsPtr^.tcl_IsStandardChannel;  
  Tcl_FSCopyFile = tclStubsPtr^.tcl_FSCopyFile;  
  Tcl_FSCopyDirectory = tclStubsPtr^.tcl_FSCopyDirectory;  
  Tcl_FSCreateDirectory = tclStubsPtr^.tcl_FSCreateDirectory;  
  Tcl_FSDeleteFile = tclStubsPtr^.tcl_FSDeleteFile;  
  Tcl_FSLoadFile = tclStubsPtr^.tcl_FSLoadFile;  
  Tcl_FSMatchInDirectory = tclStubsPtr^.tcl_FSMatchInDirectory;  
  Tcl_FSLink = tclStubsPtr^.tcl_FSLink;  
  Tcl_FSRemoveDirectory = tclStubsPtr^.tcl_FSRemoveDirectory;  
  Tcl_FSRenameFile = tclStubsPtr^.tcl_FSRenameFile;  
  Tcl_FSLstat = tclStubsPtr^.tcl_FSLstat;  
  Tcl_FSUtime = tclStubsPtr^.tcl_FSUtime;  
  Tcl_FSFileAttrsGet = tclStubsPtr^.tcl_FSFileAttrsGet;  
  Tcl_FSFileAttrsSet = tclStubsPtr^.tcl_FSFileAttrsSet;  
  Tcl_FSFileAttrStrings = tclStubsPtr^.tcl_FSFileAttrStrings;  
  Tcl_FSStat = tclStubsPtr^.tcl_FSStat;  
  Tcl_FSAccess = tclStubsPtr^.tcl_FSAccess;  
  Tcl_FSOpenFileChannel = tclStubsPtr^.tcl_FSOpenFileChannel;  
  Tcl_FSGetCwd = tclStubsPtr^.tcl_FSGetCwd;  
  Tcl_FSChdir = tclStubsPtr^.tcl_FSChdir;  
  Tcl_FSConvertToPathType = tclStubsPtr^.tcl_FSConvertToPathType;  
  Tcl_FSJoinPath = tclStubsPtr^.tcl_FSJoinPath;  
  Tcl_FSSplitPath = tclStubsPtr^.tcl_FSSplitPath;  
  Tcl_FSEqualPaths = tclStubsPtr^.tcl_FSEqualPaths;  
  Tcl_FSGetNormalizedPath = tclStubsPtr^.tcl_FSGetNormalizedPath;  
  Tcl_FSJoinToPath = tclStubsPtr^.tcl_FSJoinToPath;  
  Tcl_FSGetInternalRep = tclStubsPtr^.tcl_FSGetInternalRep;  
  Tcl_FSGetTranslatedPath = tclStubsPtr^.tcl_FSGetTranslatedPath;  
  Tcl_FSEvalFile = tclStubsPtr^.tcl_FSEvalFile;  
  Tcl_FSNewNativePath = tclStubsPtr^.tcl_FSNewNativePath;  
  Tcl_FSGetNativePath = tclStubsPtr^.tcl_FSGetNativePath;  
  Tcl_FSFileSystemInfo = tclStubsPtr^.tcl_FSFileSystemInfo;  
  Tcl_FSPathSeparator = tclStubsPtr^.tcl_FSPathSeparator;  
  Tcl_FSListVolumes = tclStubsPtr^.tcl_FSListVolumes;  
  Tcl_FSRegister = tclStubsPtr^.tcl_FSRegister;  
  Tcl_FSUnregister = tclStubsPtr^.tcl_FSUnregister;  
  Tcl_FSData = tclStubsPtr^.tcl_FSData;  
  Tcl_FSGetTranslatedStringPath = tclStubsPtr^.tcl_FSGetTranslatedStringPath;  
  Tcl_FSGetFileSystemForPath = tclStubsPtr^.tcl_FSGetFileSystemForPath;  
  Tcl_FSGetPathType = tclStubsPtr^.tcl_FSGetPathType;  
  Tcl_OutputBuffered = tclStubsPtr^.tcl_OutputBuffered;  
  Tcl_FSMountsChanged = tclStubsPtr^.tcl_FSMountsChanged;  
  Tcl_EvalTokensStandard = tclStubsPtr^.tcl_EvalTokensStandard;  
  Tcl_GetTime = tclStubsPtr^.tcl_GetTime;  
  Tcl_CreateObjTrace = tclStubsPtr^.tcl_CreateObjTrace;  
  Tcl_GetCommandInfoFromToken = tclStubsPtr^.tcl_GetCommandInfoFromToken;  
  Tcl_SetCommandInfoFromToken = tclStubsPtr^.tcl_SetCommandInfoFromToken;  
  Tcl_DbNewWideIntObj = tclStubsPtr^.tcl_DbNewWideIntObj;  
  Tcl_GetWideIntFromObj = tclStubsPtr^.tcl_GetWideIntFromObj;  
  Tcl_NewWideIntObj = tclStubsPtr^.tcl_NewWideIntObj;  
  Tcl_SetWideIntObj = tclStubsPtr^.tcl_SetWideIntObj;  
  Tcl_AllocStatBuf = tclStubsPtr^.tcl_AllocStatBuf;  
  Tcl_Seek = tclStubsPtr^.tcl_Seek;  
  Tcl_Tell = tclStubsPtr^.tcl_Tell;  
  Tcl_ChannelWideSeekProc = tclStubsPtr^.tcl_ChannelWideSeekProc;  
  Tcl_DictObjPut = tclStubsPtr^.tcl_DictObjPut;  
  Tcl_DictObjGet = tclStubsPtr^.tcl_DictObjGet;  
  Tcl_DictObjRemove = tclStubsPtr^.tcl_DictObjRemove;  
  Tcl_DictObjSize = tclStubsPtr^.tcl_DictObjSize;  
  Tcl_DictObjFirst = tclStubsPtr^.tcl_DictObjFirst;  
  Tcl_DictObjNext = tclStubsPtr^.tcl_DictObjNext;  
  Tcl_DictObjDone = tclStubsPtr^.tcl_DictObjDone;  
  Tcl_DictObjPutKeyList = tclStubsPtr^.tcl_DictObjPutKeyList;  
  Tcl_DictObjRemoveKeyList = tclStubsPtr^.tcl_DictObjRemoveKeyList;  
  Tcl_NewDictObj = tclStubsPtr^.tcl_NewDictObj;  
  Tcl_DbNewDictObj = tclStubsPtr^.tcl_DbNewDictObj;  
  Tcl_RegisterConfig = tclStubsPtr^.tcl_RegisterConfig;  
  Tcl_CreateNamespace = tclStubsPtr^.tcl_CreateNamespace;  
  Tcl_DeleteNamespace = tclStubsPtr^.tcl_DeleteNamespace;  
  Tcl_AppendExportList = tclStubsPtr^.tcl_AppendExportList;  
  Tcl_Export = tclStubsPtr^.tcl_Export;  
  Tcl_Import = tclStubsPtr^.tcl_Import;  
  Tcl_ForgetImport = tclStubsPtr^.tcl_ForgetImport;  
  Tcl_GetCurrentNamespace = tclStubsPtr^.tcl_GetCurrentNamespace;  
  Tcl_GetGlobalNamespace = tclStubsPtr^.tcl_GetGlobalNamespace;  
  Tcl_FindNamespace = tclStubsPtr^.tcl_FindNamespace;  
  Tcl_FindCommand = tclStubsPtr^.tcl_FindCommand;  
  Tcl_GetCommandFromObj = tclStubsPtr^.tcl_GetCommandFromObj;  
  Tcl_GetCommandFullName = tclStubsPtr^.tcl_GetCommandFullName;  
  Tcl_FSEvalFileEx = tclStubsPtr^.tcl_FSEvalFileEx;  
  Tcl_SetExitProc = tclStubsPtr^.tcl_SetExitProc;  
  Tcl_LimitAddHandler = tclStubsPtr^.tcl_LimitAddHandler;  
  Tcl_LimitRemoveHandler = tclStubsPtr^.tcl_LimitRemoveHandler;  
  Tcl_LimitReady = tclStubsPtr^.tcl_LimitReady;  
  Tcl_LimitCheck = tclStubsPtr^.tcl_LimitCheck;  
  Tcl_LimitExceeded = tclStubsPtr^.tcl_LimitExceeded;  
  Tcl_LimitSetCommands = tclStubsPtr^.tcl_LimitSetCommands;  
  Tcl_LimitSetTime = tclStubsPtr^.tcl_LimitSetTime;  
  Tcl_LimitSetGranularity = tclStubsPtr^.tcl_LimitSetGranularity;  
  Tcl_LimitTypeEnabled = tclStubsPtr^.tcl_LimitTypeEnabled;  
  Tcl_LimitTypeExceeded = tclStubsPtr^.tcl_LimitTypeExceeded;  
  Tcl_LimitTypeSet = tclStubsPtr^.tcl_LimitTypeSet;  
  Tcl_LimitTypeReset = tclStubsPtr^.tcl_LimitTypeReset;  
  Tcl_LimitGetCommands = tclStubsPtr^.tcl_LimitGetCommands;  
  Tcl_LimitGetTime = tclStubsPtr^.tcl_LimitGetTime;  
  Tcl_LimitGetGranularity = tclStubsPtr^.tcl_LimitGetGranularity;  
  Tcl_SaveInterpState = tclStubsPtr^.tcl_SaveInterpState;  
  Tcl_RestoreInterpState = tclStubsPtr^.tcl_RestoreInterpState;  
  Tcl_DiscardInterpState = tclStubsPtr^.tcl_DiscardInterpState;  
  Tcl_SetReturnOptions = tclStubsPtr^.tcl_SetReturnOptions;  
  Tcl_GetReturnOptions = tclStubsPtr^.tcl_GetReturnOptions;  
  Tcl_IsEnsemble = tclStubsPtr^.tcl_IsEnsemble;  
  Tcl_CreateEnsemble = tclStubsPtr^.tcl_CreateEnsemble;  
  Tcl_FindEnsemble = tclStubsPtr^.tcl_FindEnsemble;  
  Tcl_SetEnsembleSubcommandList = tclStubsPtr^.tcl_SetEnsembleSubcommandList;  
  Tcl_SetEnsembleMappingDict = tclStubsPtr^.tcl_SetEnsembleMappingDict;  
  Tcl_SetEnsembleUnknownHandler = tclStubsPtr^.tcl_SetEnsembleUnknownHandler;  
  Tcl_SetEnsembleFlags = tclStubsPtr^.tcl_SetEnsembleFlags;  
  Tcl_GetEnsembleSubcommandList = tclStubsPtr^.tcl_GetEnsembleSubcommandList;  
  Tcl_GetEnsembleMappingDict = tclStubsPtr^.tcl_GetEnsembleMappingDict;  
  Tcl_GetEnsembleUnknownHandler = tclStubsPtr^.tcl_GetEnsembleUnknownHandler;  
  Tcl_GetEnsembleFlags = tclStubsPtr^.tcl_GetEnsembleFlags;  
  Tcl_GetEnsembleNamespace = tclStubsPtr^.tcl_GetEnsembleNamespace;  
  Tcl_SetTimeProc = tclStubsPtr^.tcl_SetTimeProc;  
  Tcl_QueryTimeProc = tclStubsPtr^.tcl_QueryTimeProc;  
  Tcl_ChannelThreadActionProc = tclStubsPtr^.tcl_ChannelThreadActionProc;  
  Tcl_NewBignumObj = tclStubsPtr^.tcl_NewBignumObj;  
  Tcl_DbNewBignumObj = tclStubsPtr^.tcl_DbNewBignumObj;  
  Tcl_SetBignumObj = tclStubsPtr^.tcl_SetBignumObj;  
  Tcl_GetBignumFromObj = tclStubsPtr^.tcl_GetBignumFromObj;  
  Tcl_TakeBignumFromObj = tclStubsPtr^.tcl_TakeBignumFromObj;  
  Tcl_TruncateChannel = tclStubsPtr^.tcl_TruncateChannel;  
  Tcl_ChannelTruncateProc = tclStubsPtr^.tcl_ChannelTruncateProc;  
  Tcl_SetChannelErrorInterp = tclStubsPtr^.tcl_SetChannelErrorInterp;  
  Tcl_GetChannelErrorInterp = tclStubsPtr^.tcl_GetChannelErrorInterp;  
  Tcl_SetChannelError = tclStubsPtr^.tcl_SetChannelError;  
  Tcl_GetChannelError = tclStubsPtr^.tcl_GetChannelError;  
  Tcl_InitBignumFromDouble = tclStubsPtr^.tcl_InitBignumFromDouble;  
  Tcl_GetNamespaceUnknownHandler = tclStubsPtr^.tcl_GetNamespaceUnknownHandler;  
  Tcl_SetNamespaceUnknownHandler = tclStubsPtr^.tcl_SetNamespaceUnknownHandler;  
  Tcl_GetEncodingFromObj = tclStubsPtr^.tcl_GetEncodingFromObj;  
  Tcl_GetEncodingSearchPath = tclStubsPtr^.tcl_GetEncodingSearchPath;  
  Tcl_SetEncodingSearchPath = tclStubsPtr^.tcl_SetEncodingSearchPath;  
  Tcl_GetEncodingNameFromEnvironment = tclStubsPtr^.tcl_GetEncodingNameFromEnvironment;  
  Tcl_PkgRequireProc = tclStubsPtr^.tcl_PkgRequireProc;  
  Tcl_AppendObjToErrorInfo = tclStubsPtr^.tcl_AppendObjToErrorInfo;  
  Tcl_AppendLimitedToObj = tclStubsPtr^.tcl_AppendLimitedToObj;  
  Tcl_Format = tclStubsPtr^.tcl_Format;  
  Tcl_AppendFormatToObj = tclStubsPtr^.tcl_AppendFormatToObj;  
  Tcl_ObjPrintf = tclStubsPtr^.tcl_ObjPrintf;  
  Tcl_AppendPrintfToObj = tclStubsPtr^.tcl_AppendPrintfToObj;  
{$ENDIF}

